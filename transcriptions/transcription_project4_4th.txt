Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_00: 
Speaker SPEAKER_03:  그리고 이제 뭐 오늘은 사실 리뷰를 끝내는 날이고
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  프로젝트 본격적인 거는 주주탐색이랑 이런 거  내일 얘기하기로 했잖아요
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  다다음주가..
Speaker SPEAKER_01: 
Speaker SPEAKER_03:  그러니까 다음주는 프로젝트 기간으로 들어가는 거고
Speaker SPEAKER_03:  시스템 상으로는?  다음주가 방학이고 그런 건가요?
Speaker SPEAKER_04: 
Speaker SPEAKER_03:  아  아니 다른 게 아니라 그냥 저희도 방학을 가져도 어떨까 하고
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  근데 저희는 다음 주에 일정 있으신 분이 많으니까
Speaker SPEAKER_03:  굳이 시스템 맞추려면 지금 각자 다 떨어져 있는데
Speaker SPEAKER_03:  그리고 방학이 원래는 없이 그냥 진행하려고 했는데
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  미팅 끝나고 좀 생각을 해보니까
Speaker SPEAKER_01: 
Speaker SPEAKER_03:  뭐 해외에 나가 있다거나 예비군에 가 있다거나 하는데
Speaker SPEAKER_02: 
Speaker SPEAKER_03:  뭐 핸드폰 들고 뭐 아니면 노트북 들고
Speaker SPEAKER_03:  참여하는 게
Speaker SPEAKER_03:  아 저희가 기한이 다음 주까지 라면 그렇게 해야겠지만
Speaker SPEAKER_03:  그리고 저 같은 경우도 생각해 보니까
Speaker SPEAKER_02: 
Speaker SPEAKER_03:  4차 때부터 엄청 그 중간에 뭐 쉬는 거 없이
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  어..  저한테도 별로 안 쉬고 하고  여러분들한테도 그렇고  그래서 뭐 아무 서로 소통을 할 필요..
Speaker SPEAKER_03:  그러니까 소통은 막고 아무것도 안 하자 뭐 그런 거는 아니지만
Speaker SPEAKER_03:  막 크게 본 프로젝트 기간처럼 부담갖고 진행할 필요는 없겠다는 생각이 좀 들었어요
Speaker SPEAKER_03:  어떻게 생각하나요?  아 그러면 안 된다  무조건 다 하자 하시는 분 있나요?  ㅋ
Speaker SPEAKER_00:  ㅋ
Speaker SPEAKER_00: 
Speaker SPEAKER_03:  그렇죠 그렇죠  네 여기 프로그래머스라 관관없이
Speaker SPEAKER_04:  ㅋ
Speaker SPEAKER_01: 
Speaker SPEAKER_01: 
Speaker SPEAKER_03:  네  그리고 생각해 봤더니  저희가 최대한 이 프로그래머스 기한 내에 끝내려고 하겠지만..  ㅋ  ㅋ  ㅋ  ㅋ  ㅋ  ㅋ  ㅋ  ㅋ
Speaker SPEAKER_04:  네
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  포폴용으로 하는 거니까 프로젝트 마무리는 할 수 있는 거고  나가 계신 분들도 계시고 한데
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  그리고 아무리 예비군 좋아지고 어쩌고 해도  일단 특정 공간에 가둬놓는 거 자체가 기분이 엄청나게 나쁜데요
Speaker SPEAKER_03:  아 전 나쁘더라고요
Speaker SPEAKER_03:  근데 거기에서 핸드폰 들고 막 이렇게 할 필요가 있나  아 근데 제가 약간 마음이 좀 조급했던 거 같은데  생각해 보니까 그게 오히려 크게 봤을 때는
Speaker SPEAKER_03:  한 달짜리 프로젝트로 봤을 때는 마이너스일 수 있겠다  어떻게 보면 다행히 세 분 일정이 또 딱 다음 주에 다 겹쳐가지고  그게 어떻게 보면 참 좋은 행운인데
Speaker SPEAKER_01: 
Speaker SPEAKER_03:  그때 좀 쉬고 뭐 궁금한 거 있으면 서로 좀 물어보고
Speaker SPEAKER_03:  어...
Speaker SPEAKER_03:  저희 토요일까지...  아니지
Speaker SPEAKER_03:  가능하면 내일까지 이제 주제 좀 정하자고 했는데
Speaker SPEAKER_03:  뭐 정해지면 정하고 토요일까지가 될 수도 있으니까
Speaker SPEAKER_03:  어쨌든 이번 주 내에 주제가 좀 정해지면
Speaker SPEAKER_03:  그냥 그거 가지고 각자 좀 탐색 좀 해보고  그다음에 오늘 보니까 다들 그 풀 리퀘스트 다 잘 하셨더라고요
Speaker SPEAKER_03:  그래서 이제 저희가 테스트 말고 본 프로젝트 진행할 때는  그 마스터 브랜치 메인 브랜치 말고는  이제 합병할 브랜치 만들고
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  여기에다가 각자 진행한 거 좀 뭐 주제 정해지면
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  그렇게 다다음 주부터 진행해도 무리 없겠다 싶었습니다
Speaker SPEAKER_02: 
Speaker SPEAKER_03:  그래서 이렇게 느슨한 거 싫다
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  빡세게 하자라는 분이 따로 안 계시면은
Speaker SPEAKER_03:  그렇게 좀 쉬어가면서 진행하는 게 어떤가 싶습니다
Speaker SPEAKER_04: 
Speaker SPEAKER_00:  좋아요
Speaker SPEAKER_00: 
Speaker SPEAKER_04: 
Speaker SPEAKER_03: 
Speaker SPEAKER_04: 
Speaker SPEAKER_03:  아 좋습니다
Speaker SPEAKER_02: 
Speaker SPEAKER_04: 
Speaker SPEAKER_01: 
Speaker SPEAKER_01:  오늘 트리프트 하면은 뭐지?  하고 싶은 거는 한 명만 할 수 있나요?  아니면 그게 뭔가 다른 사람들 확인을 하고 뭐지를 할 수가 있나요?
Speaker SPEAKER_02: 
Speaker SPEAKER_02: 
Speaker SPEAKER_04: 
Speaker SPEAKER_01: 
Speaker SPEAKER_01: 
Speaker SPEAKER_02: 
Speaker SPEAKER_03:  그게 권한 주기에 따라 다른데  일단은 아마 현 상태에서는 저만 할 수 있을 거예요
Speaker SPEAKER_03:  이게 만약에 모든 사람이 마일즈 권한을 갖고 있으면
Speaker SPEAKER_03:  브랜치를 나눠서 풀 리퀘스트를 하고  하는 이유가 없기는 해요
Speaker SPEAKER_03:  직접 수정하면 되니까
Speaker SPEAKER_03:  근데 그러면 이제 충돌이 나거나 할 수 있어서
Speaker SPEAKER_01:  뭐지를 할 수 있는 권한이라고 얘기하면
Speaker SPEAKER_04:  뭐지를 할 수 있는 권한이라고 얘기하면
Speaker SPEAKER_04: 
Speaker SPEAKER_01:  그 트리프트 때리는 게
Speaker SPEAKER_04:  뭐라고 해야 되지? 충돌?
Speaker SPEAKER_01:  확인을 하고  또 약간 실납?  해주면은
Speaker SPEAKER_01:  내가 생각해도  생각해봐도  약간 초코시원한?  약간 초코시원한?  초코시원으로?  그러니까 이 사람이 틀리게 때리는 게 정상적이다
Speaker SPEAKER_01:  그래서 그게 만약에 뭐 이런 설정을 해가지고  세 명이 뭐 세 명으로 했으면  세 명 이상이 그거를 오케이 하면은 뭐지를 할 수 있고
Speaker SPEAKER_01:  뭐 이런 게 있을 정도?
Speaker SPEAKER_04: 
Speaker SPEAKER_01: 
Speaker SPEAKER_01: 
Speaker SPEAKER_03:  아 그래요?  어쩐지 저도 그거는 모르는데  한번 확인해 봐야겠네요
Speaker SPEAKER_00:  한번 확인해 봐야겠네요
Speaker SPEAKER_01:  뭐지에 대한 권한의 증가기들이랑
Speaker SPEAKER_04: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_02: 
Speaker SPEAKER_03:  여기에서 이제 각자 했는데
Speaker SPEAKER_03:  제가 만약에 뭐 04SPEAKER_04님이 한 거
Speaker SPEAKER_03:  여기에서 이걸 투표로 진행하는 기능이 있다고?
Speaker SPEAKER_03: 
Speaker SPEAKER_01:  네
Speaker SPEAKER_02: 
Speaker SPEAKER_00: 
Speaker SPEAKER_01: 
Speaker SPEAKER_01:  플랫 같은 거에 말씀을 드릴게요  뭔가 저기 정확하지가 않아가지고
Speaker SPEAKER_04: 
Speaker SPEAKER_00:  아 네네네
Speaker SPEAKER_03: 
Speaker SPEAKER_01:  어제 배운 게 좀 생각이 났거든요
Speaker SPEAKER_03:  아 근데 그런 기능이 있으면 되게 좋을 것 같긴 해요
Speaker SPEAKER_04: 
Speaker SPEAKER_02: 
Speaker SPEAKER_03:  저도 지금 그냥 개인 레포만 써봤지
Speaker SPEAKER_03:  이렇게 오리지널 다 해본 적이 없어서
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  아
Speaker SPEAKER_03: 
Speaker SPEAKER_02: 
Speaker SPEAKER_00:  .
Speaker SPEAKER_01:  .  .  .  .
Speaker SPEAKER_04: 
Speaker SPEAKER_04:  .
Speaker SPEAKER_00: 
Speaker SPEAKER_02: 
Speaker SPEAKER_03: 
Speaker SPEAKER_02: 
Speaker SPEAKER_03:  .  .
Speaker SPEAKER_02:  .
Speaker SPEAKER_04: 
Speaker SPEAKER_01:  .
Speaker SPEAKER_02:  .
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_01: 
Speaker SPEAKER_02: 
Speaker SPEAKER_01: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  어? 그건 아니잖아요? 이게 포크 안 하고 풀리퀘스트를 못 날리지 않나?
Speaker SPEAKER_04: 
Speaker SPEAKER_01: 
Speaker SPEAKER_01:  그 브랜치 그냥 메인 말고 다른 브랜치 만들려고 했는데 거기다가 푸시도 안 됐던 것 같아서.
Speaker SPEAKER_03: 
Speaker SPEAKER_01: 
Speaker SPEAKER_01: 
Speaker SPEAKER_01: 
Speaker SPEAKER_01: 
Speaker SPEAKER_04: 
Speaker SPEAKER_00: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  그러니까 그 깃 클론으로 해서 저 노컬 머신에 받아서 푸시했는데 안 됐다는 말씀이세요?
Speaker SPEAKER_01:  그러면 일단은 이거 다 바꿔볼 테니까 테스트를 조금 더 해볼까요?
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_01: 
Speaker SPEAKER_03: 
Speaker SPEAKER_01: 
Speaker SPEAKER_02: 
Speaker SPEAKER_03:  아, 그리고 뭐 사실 이렇게 해놓고 멀지를 함부로 안 하면 되니까. 권한으로 막기보다는.
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  아, 근데 모르겠어요. 근데 이것도 좀 찾아봐야겠는데. 저희가 그냥 저희 협업하는 것도 있지만 이것도 어디 좀 제출해보려고 하는 거잖아요.
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  네.  근데 일단은 저희가 모든 구성원을 오너로 놓는 경우는 저희가 없다고 알고 있기는 해서.  이것도 한번 확인해보죠. 근데 일단은 모든 권한을 갖고 지금은 테스트 레퍼밖에 없으니까.
Speaker SPEAKER_03: 
Speaker SPEAKER_02: 
Speaker SPEAKER_03:  이거 뒤뚝 아마 지금도 그렇지만은 뭐 진행하려고 하면 자꾸 문제점이 나올 거란 말이죠. 그러면은 지금처럼 얘기하면서.
Speaker SPEAKER_03: 
Speaker SPEAKER_01:  뭐 이런 거 지금 마우스에서 뭐 진행하고 있는 건 또 있을 것 같고.
Speaker SPEAKER_01: 
Speaker SPEAKER_04: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  그렇죠. 네, 네, 네.
Speaker SPEAKER_04:  그렇죠. 네, 네, 네.
Speaker SPEAKER_00: 
Speaker SPEAKER_01: 
Speaker SPEAKER_02: 
Speaker SPEAKER_04: 
Speaker SPEAKER_01:  뭔가 표를 땡겨오는 걸 한번 해줘야 될 것 같아요
Speaker SPEAKER_01: 
Speaker SPEAKER_02: 
Speaker SPEAKER_04: 
Speaker SPEAKER_01: 
Speaker SPEAKER_01:  그 사이에 또 뭐가 바뀌어서
Speaker SPEAKER_02: 
Speaker SPEAKER_01:  다 만들었어가지고 그 표를 땡겨오는 거를 잘 살려야 되더라고요  그래서 그런 것도 뭔가 해줬으면 좋겠다라는 생각을 한 게 있었는데
Speaker SPEAKER_04: 
Speaker SPEAKER_03:  그래서 제가 안 그래도
Speaker SPEAKER_03:  이제 주제가 좀 확정되면 그렇긴 하지만  제가 만든 텍스트를 추출하는 거나 지금 SNA 하는 거나
Speaker SPEAKER_03:  아니면 앞단에 있는 퇴사 예측하는 API 여러 가지 코드들이 있잖아요
Speaker SPEAKER_03: 
Speaker SPEAKER_01: 
Speaker SPEAKER_03:  그거를
Speaker SPEAKER_03:  조금만 수정해서 다시 풀 이렇게 해보고
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_02: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  그냥 그 노트북 내에 결과 값들도 다 저장이 되잖아요
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_02: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_02: 
Speaker SPEAKER_03:  이 페이지 같은 거 이게 아직 클라우드랑 연동이 안 돼서 URL로는 안 되지만
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  이탑에 코드 같은 거 제가 올리면 지금 제 개인 거기에는 있긴 한데  저희 여기에 공유에도 올리면 이렇게 예측해가지고
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  이거 결과값이 나오는지
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  아 빨리 빨리 안 돼서
Speaker SPEAKER_03:  아 빨리 빨리 안 돼서  아
Speaker SPEAKER_02: 
Speaker SPEAKER_03:  네 그래서 그렇게 일단은 진행해보면 좋을 것 같고
Speaker SPEAKER_02: 
Speaker SPEAKER_02: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  뭐냐면
Speaker SPEAKER_03:  이게 제가 저번에 3차 프로젝트 할 때 모집했던 그림이에요
Speaker SPEAKER_03:  근데 다른 내용이 아니라 원래 이렇게 3개 목표가 있었어요  근데 이 중에서 제가 이제 세 번째가 원래는 그냥 API
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  파이썬 모듈 정도만 이제 만들면 좋겠다  혹은 아니면 웹페이지에 올릴 코드 정도만 구성하면 좋겠다 했는데
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  앱단 정도만 rendy Types όliers
Speaker SPEAKER_03: 
Speaker SPEAKER_02: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  다 프론트 땅까지 구성하긴 했는데  근데 여기서 말씀드리고 싶은 거는
Speaker SPEAKER_03:  원래는 두 번째 때
Speaker SPEAKER_03:  다른 HR 데이터를 가져와서
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  그러니까 제가 느끼기에는
Speaker SPEAKER_03:  크로스 밸리데이션을 하든  트레인하고 테스트를 어떻게 나누든지 간에  이론적으로는 과적합이나
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  아니면 일반화 성능 같은 거를
Speaker SPEAKER_03:  혹은 K-골드로 나눈
Speaker SPEAKER_03:  여전히 하나 데이터 내에서 하는 거라  이게 정말로 현실에서 돌아가는지를
Speaker SPEAKER_03:  보여주기는 조금 아쉽다고 생각했거든요.
Speaker SPEAKER_03:  그래서 컬러가  컬럼이 좀 비슷하면  다른 데서 수집된
Speaker SPEAKER_03:  혹은 가상 데이터라고 할지라도  다른 방식으로 생성된 데이터들끼리  비교를 해 보고 싶었는데  이때는 같은 컬럼이 있는
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  그 데이터셋들이 각자 너무 다르고
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  그다음에 많은 데이터셋 같은 경우에는  어떻게 수집했는지 자세한 설명이 없기도 하고  그 다음에 컬럼이 정확히 무슨 뜻인지도  컬럼명으로 수집해야 되는 경우가 있고  그다음에 뭐 컬럼명에 대한 한 줄짜리 설명이 있어도  그게 충분하지 않은 경우도 있고 해서
Speaker SPEAKER_03:  그래서 제가 저희가 진행하는 거에서는
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_02: 
Speaker SPEAKER_00: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  사람들한테 직접 수집을 해 보자고 했잖아요.  근데 이거를 훈련 데이터셋까지 모으려면  사실 현실적으로 좀 힘들 것 같아요.
Speaker SPEAKER_03:  그렇게 하려면 저희가 무슨 쇼폼 영상 같은 거를 제작해서
Speaker SPEAKER_03:  어디서 이슈가 되거나 해야지  뭐 몇백 개 몇천 개를 모아서  진행을 아니면 엄청 오랫동안 모으던가
Speaker SPEAKER_03:  아니면 뭐 돈을 할 때마다 돈을 좀 준다거나  무슨 인센티브가 있으면 모를까  사실 어려울 것 같아 가지고
Speaker SPEAKER_03:  그게 아니라 저번에 진행하려고 했던  이 현실에서 검증하는
Speaker SPEAKER_03:  그러니까 그냥 한 데이터셋을 쪼개서  일반화 가능성 보는 거 말고 테스트하는 거 말고  그걸 써보면 어떤가 해요.  그러니까 이게 좀 적게 모이더라도  뭐 10개 20개만 모이더라도
Speaker SPEAKER_03:  각자 주변인들한테만 해달라고 해도 될 거라서
Speaker SPEAKER_02: 
Speaker SPEAKER_03:  예측 성능이 높게 나왔는데
Speaker SPEAKER_03:  이게 이제 현실에서는 얼만큼 되지
Speaker SPEAKER_03:  이제 이 필드를 맞춰서  저희가 사람들이 자기 데이터셋을 넣었을 때 얼마나 이게..
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  이거는 이제 한국하고 외국, 미국 차이인 거 같다
Speaker SPEAKER_03:  라고 얘기해도 되고  비슷하면은 뭐 훈련 데이터가
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  우리가 쪼개놓은 그 테스트셋 뿐만이 아니라  실제로 수집한 거에서도 어느 정도 성능을 보였다고 얘기하면은 좀..
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  일반화 가능성 얘기를 할 수 있지 않을까 싶어요.  이 일반화 가능성을 좀 신경 쓰는 이유가
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  제가 느끼기에는 이게 제가 실무 담당자라고 하면
Speaker SPEAKER_03:  이런 내용을 들으면서 가장 궁금할 점이
Speaker SPEAKER_03:  우리가 쓸 수 있을까?  그런 느낌일 것 같거든요.
Speaker SPEAKER_03:  그래서 그거를 좀 보여주고 쓸 수 있을까?  쓸 수 있다고 얘기하거나 아니면은
Speaker SPEAKER_03:  결과가 원하는 대로 안 나오더라도  우리가 거기까지 고려했다 라는 거를 보여줄 수 있으니까
Speaker SPEAKER_02: 
Speaker SPEAKER_03: 
Speaker SPEAKER_02: 
Speaker SPEAKER_03:  그렇습니다.  그러면 만약에 이 분이 대해서 어떤 절을 배우는 방법을
Speaker SPEAKER_02:  그러면 만약에 이 분이 대해서 어떤 절을 배우는 방법을
Speaker SPEAKER_04: 
Speaker SPEAKER_00:  아니면 우리 좀 약간  이런 텀라던가 이런 텀론 텀을 하나 만들어 놓고  그 전에 사람들 만나게 될 수 있을까?
Speaker SPEAKER_00: 
Speaker SPEAKER_03:  사실 생각해보면 꼭 이렇게 웹페이지일 필요도 없죠.  만약에 저희가 주변한테 그런 식으로 이제 얻을 거라고 하면
Speaker SPEAKER_02: 
Speaker SPEAKER_03:  구글 폼일 필요도 없이 사실 그냥 불러달라고 한 다음에  저것만 놔도 되긴 하죠.  어디든지 간에 구글 폼이든 엑셀이든.
Speaker SPEAKER_00: 
Speaker SPEAKER_00: 
Speaker SPEAKER_00:  그래서 우리가 이렇게 해가지고 만들어보면 조금이라도 빨리
Speaker SPEAKER_00: 
Speaker SPEAKER_03:  그렇죠. 그렇죠.  아무리 테스트여도 그러니까 부가 테스트 같은 느낌이잖아요.
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  이미 뭐 크로스 밸리데이션이든 테스트셋이든
Speaker SPEAKER_03:  이제 그 일반적으로 하는 검증도 다 하는 거니까
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  근데 그래도 열 개 이러면 좀 막 저희가...
Speaker SPEAKER_03:  저희가... 하하하하하하
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  주변에 다섯 명이니까.  한 세, 네 명씩만 모아도 한 2, 30개?  그다음에 어쨌든 어디 뭐 트위터든 어디든 올려서  몇 명이라도 이제 저희 관련되지 않은 사람들 것도 수집하면 좋죠.  근데 이제 그럴 때는 이 웹페이지를 좀 올려야겠죠.
Speaker SPEAKER_02: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  그 서비스 단으로 만들어서.
Speaker SPEAKER_03:  AWS 같은 데 연결해서.
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  그래서 혜수님 말씀하신 대로 그거는 근데 좀 저희가 진행을 해야 되니까
Speaker SPEAKER_03:  앞단에 미리 이렇게 순차가 아니라 격렬로 이렇게 수집하면 좋겠어요.
Speaker SPEAKER_03:  저희 주변인한테는 조금 더 비정형화된 조사를 할 수 있으니까
Speaker SPEAKER_02: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  음.
Speaker SPEAKER_02: 
Speaker SPEAKER_00: 
Speaker SPEAKER_03:  근데 이제 이거는 이걸 하겠다고 확정이 이제 내일이나 토요일에 되면  이제 그렇게 진행을 해보면 될 것 같아요.
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  네.
Speaker SPEAKER_03:  네.  interessante.  불가능.
Speaker SPEAKER_03:  three.  yeah.  네.
Speaker SPEAKER_03:  uh.  그때는 SA나 이런거는 해보려고 했는데 시간 관계상 진행은 못해봤고
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  어떻게 줄일 수 있는 뉴스 cũng 들 텐데 단순히 이진 bees 모델만으로는 모어가 얼만큼 뭘 건드려면 어버가 얼만큼 저
Speaker SPEAKER_03:  그런 내용을 정확히 이제 전달해주기 어렵다고 생각해 가족은 더 영상 감으로 얘기할 수 있는 해phase
Speaker SPEAKER_03:  이khana 너무 넣었나 접 estas
Speaker SPEAKER_03:  근데 저는 이런 식으로 피처를 다시 레이블 삼아서 모델을 한 번 더 빌딩하는 게
Speaker SPEAKER_03:  이게 설득력 측면에서 어떤가 했는데  이번에 담당하신 멘토님은 굉장히 좋아하시긴 했거든요.
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  자기가 생각할 때는 설득력이 아무 문제 없다고.  오히려 더 좋은 것 같다고.
Speaker SPEAKER_03:  그 9개를 서비스하기엔 너무 많다고 생각해서
Speaker SPEAKER_03:  입력하는 게 너무 많다고 생각해서  걔를 줄이면서 예측 퍼포먼스가 얼마나 떨어지는지도 확인을 해서  그래서 최종적으로 서비스 만들고
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  혹시 이거 영상에 뒤에 구현되는 시연 영상은 다 보셨죠?
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  그래서 발표는 저 정도였고
Speaker SPEAKER_03:  저는
Speaker SPEAKER_00: 
Speaker SPEAKER_00:  저는 이제 간략하게 이거 하면서 좀 느꼈던 점이
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  전체 프로세스를 다 해봤다는 게 장점이어서 단점이었어요.
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  두 단계가 아니고 두 종류로 진행을 했고요.
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  그래서 완성을 하기는 했으나  불안불안한 느낌이 계속 있었어요.
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  이게 지금도 사실 있고
Speaker SPEAKER_03:  그래서 개선하거나 수정할 내용이 정말 많을 거라고 생각해서
Speaker SPEAKER_03:  그다음에 저도 사실 수정을 좀 더 진행하긴 했거든요.
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  이게 조금 그때 아마 04SPEAKER_04님하고 현선님 프로젝트에서도
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  아니 근데 01SPEAKER_01님하고 혜수님 프로젝트에서도 비슷한 얘기가 나왔던 것 같아요.
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  시간이 조금 더 있었으면 각 단계를 조금 더 자세히  좀 엄밀하게 봤으면 좋았을 텐데  시간들이 다 10일밖에 안 됐다 보니까  자세히 못 봤다. 저도 그게 조금 아쉬웠습니다.
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  그래서 이제 다른 분들 하나씩 보면
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  이게
Speaker SPEAKER_03: 
Speaker SPEAKER_02: 
Speaker SPEAKER_03:  오버 샘플링을 비교해 보시고 안 썼죠.
Speaker SPEAKER_03: 
Speaker SPEAKER_00: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  이게 이만큼이랑 얘가 다 고변산으로 들어가니까
Speaker SPEAKER_00: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  코믹스 혼자 엄청 열심히 돌렸죠.
Speaker SPEAKER_03:  근데 이게.  그 저희는 한 8대2 정도 됐는데도
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  안 했을 한 xg 부스트만 있긴 한데  전부 다 안 했을 때 모델이 비교가 되거든요.
Speaker SPEAKER_03:  그러니까 저는 이걸 자동화를 했기 때문에
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  이게 이제 돌리면 얘가 이렇게 돌아가면서 전부 모든 조합에 대해서.
Speaker SPEAKER_03:  그래서 제가 이제 이 오버 샘플링을 적용했을 때  뭐 로지스틱 리그레이션, 램븐 포레스트 얘가
Speaker SPEAKER_03:  각 하이퍼 파라멘터 튜닝을 해 봤을 때  이 하이퍼 파라멘트 했을 때 AUC 스코어 이만큼 이렇게 해서 비교를 시킨 건데
Speaker SPEAKER_03:  근데 이제 그걸 조금 찾아보니까 그게 경을 따지면 오히려 더 좋았을 것 같아요.
Speaker SPEAKER_03:  그래서 제가 이제 이 오버 샘플링을 안 한 게 오히려 더 좋았어요.  그래서 이제 이 오버 샘플링을 안 한 게 오히려 더 좋았어요.
Speaker SPEAKER_03:  오버 샘플링이라는 게 약간 임의로 데이터를 복제해서 양을 맞춰주는 거다 보니까
Speaker SPEAKER_03:  노이즈가 좀 늘어난다고 해요.  그래서 보통은 이 노이즈를 상세할 만큼  균형이 맞춰짐으로 인해서 모델이 예측 성능이 높아지는 거가
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  그래서 이걸 맞춰줬을 때 이걸 했을 때 예측 성능이 높아지는데  이걸 맞춰줬을 때  근데 만약에 데이터가 웜 데이터 자체가 양이 적기는 해도
Speaker SPEAKER_03:  그럼 깔끔하게 나눠지니까 노이즈가 없이 모델이 이걸 예측하는 데에서 깔끔하면
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  근데 04SPEAKER_04 님하고 현선 님은  그 모델에서 들었던 것 같은데 차이가 크진 않았어요.
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  근데 차이가 크진 않았는데 그래도 뭔가 자동화돼서 모델을 결정하는 관점에서
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  지금이야 이런데 지금 이걸 훨씬 더 많이 추가했을 때도 가정을 하고 있는 거니까  그때는 이 차이가 더 벌어질 수 있다고 생각하고 그래도 조금 더 높은 거를 잡았던 거죠.
Speaker SPEAKER_03:  지금 여기에서도
Speaker SPEAKER_03:  이게 커보여도 Y축을 보면은 엄청나게 작아요.
Speaker SPEAKER_03:  지금 얘가 사실 이렇게 Y축을 잡으면 안 되긴 하는데  0.0SPEAKER_00 단위로 지금 눈금이 하나씩 있거든요.
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  하지만 이게 이제 비율이라고 생각했을 때는
Speaker SPEAKER_03:  이게 더 노이즈가 높은 것 같아요.  이게 더 노이즈가 높은 것 같아요.  그래서 지금 약간 제가 복합적으로 이거 좋았던 점 아쉬운 점 하고
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  그래서 뭐 성능이 높으면서도 모델이 빨리 빌딩되는 거를 고르긴 했는데
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  차이가 크긴 했거든요.  제가 알고 있기로는 랜덤 포레스트랑 엑스지 부스트랑 그레이디언 부스팅 전부 다 앙상블 모델이에요.
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  그래서 사실 디시전 트리를 막 여러 개 넣고 투표시키고 이런 과정들이 있다 보니까
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  시간이 오래 걸리는 게 보통인데 엑스지 부스트가 일종의 최적화 얘는 뎁스 기반으로 가고  캡 부스트는 뭐 3개가 되니까.  캡 부스트는 뭐 리프 기반으로 간다고 했던 것 같아요.  그러니까 이제 모든 걸 다 그 디시전 트릭이 그걸 모델을 다 따라하게 하는 게 아니라  일종의 최적화 알고리즘을 좀 넣은 거죠.  그래서 보통은 그 성능이 조금 더 떨어진다고 알고 있어요.
Speaker SPEAKER_03:  그러니까 약간 성능이 까지는 거를 트레이드 오프 하는데  근데 많이 까지지 않는데 굉장히 가벼워진다.  그래서 이제 프로덕션에서 돌릴 때는 이렇게 이제 이 차이가 엄청난데.  빌딩되는 차이가.
Speaker SPEAKER_03:  그래서 얘도 사실 이게 이제 축 때문에 잘 안 보이는데 조금 낮긴 하거든요.  이 랜덤 포레스트랑 그래디언 부팅에 비해서.
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  약간 고민이 근데 이제 서비스를 현재로서는 어떻게 만들었냐면.
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_02: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  그 얘기인 즉 이거 사이트를 사용할 때마다 모델 빌딩을 다시 한다는 얘기거든요.
Speaker SPEAKER_03:  왜 이렇게 했냐면 그 값이 추가되는 거를 고려해서요.
Speaker SPEAKER_03:  아 이번에는 누가 누가 들어왔고 그러면 이제 그 데이터셋만 넣으면은  자동으로 빌딩해주고 이제 여기에다 값 넣어서 추측할 수.
Speaker SPEAKER_02: 
Speaker SPEAKER_03:  그러니까 이제 뭐 원하는 값.  추측할 수.  지금 이렇게 이제 임의로 넣었을 때는 관둘 확률이 0.SPEAKER_00%라고 나오죠.
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  무슨 얘기냐면 그 모델 업데이트를 따로 제공한다고 하면은 이 데이터는
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  인베드 돼 있는 거예요.  이게 그냥 예측 모델만 있다고 하면 이미 그러니까 빌딩된 머신러닝을 예측만 한다고 하면
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  빌딩돼 걸리는 시간은 별 문제가 아니잖아요.  그러니까 빌딩되는 시간이 엄청 오래 걸린다고 너무 오래 걸리지만 않으면 이 사용 환경에서 딜레이는 없겠다 싶더라고요.
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  네.
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  모델을 빌딩하는 데 걸리는 시간.
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  네.
Speaker SPEAKER_02: 
Speaker SPEAKER_00: 
Speaker SPEAKER_04: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  박스 플라크 같은 것도 그려보긴 했는데  발표도
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  이미 14분이었고 프로젝트도  프로젝트도
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  약간 뺐어요. 근데 빼면서  뭔가
Speaker SPEAKER_03:  내용을 빼면 뺄수록  전달할 수 있는 게 적어지기는 하는데  껴넣을 데가 없다고 생각했어요.
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  뭔가 다른 프로젝트에  비해서. 보고서로 쳐도
Speaker SPEAKER_03:  마찬가지니까.
Speaker SPEAKER_03:  없는 서비스 단위거든요.
Speaker SPEAKER_03:  그래서 그 뒤에  분이 그런 질문도 주셨던 것 같은데  서비스에 대한 설명이 자세하지  않아서 좀 아쉽다. 근데
Speaker SPEAKER_03:  제가 느끼기에는
Speaker SPEAKER_03:  이게 만약에 백엔드 프로젝트라고 치면  이 서비스 단만  별도의 하나 프로젝트 양이라고 생각해요.
Speaker SPEAKER_03:  이거를  백엔드를 이렇게 구성해서  모듈을 어떻게 짰고  HTTP 명령  HTTP는 요청은 이렇게
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  리퀘스트는 이렇게 날리고  리스판스는 어떻게 하고
Speaker SPEAKER_03:  그래서 빼보랬어요.
Speaker SPEAKER_03: 
Speaker SPEAKER_01: 
Speaker SPEAKER_03:  그리고  그리고  그리고  그리고  그리고  그리고
Speaker SPEAKER_03:  제가 이걸 돌아가게 만들긴 했지만  완전히 자세하게 다 파악하고 있는 게 아니고
Speaker SPEAKER_03:  또 약간 이어서 말씀드리면
Speaker SPEAKER_03:  아마 02SPEAKER_02님이 질문 주셨던 것 같은데  유비콘 이거
Speaker SPEAKER_03:  프론트단 기술이
Speaker SPEAKER_03:  아닌 것 같은데  프론트단 기술로 들어가
Speaker SPEAKER_03:  있는 게
Speaker SPEAKER_03:  궁금하다.
Speaker SPEAKER_03:  라고 질문이 있었죠.  네 맞아요.
Speaker SPEAKER_01: 
Speaker SPEAKER_03:  맞습니다.
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  저도 이걸 처음 써봤거든요.
Speaker SPEAKER_03:  FastAPI도 그렇고
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  백단이라는 건 확실히 알고 있어서  이 유비콘 이 프레임이
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  저 프론트 단위겠거니  그냥 그렇게 넙하게 생각한 거예요.
Speaker SPEAKER_03:  근데 사실 얘네들만 프론트에 쓰인 그..  언어들이었던 거죠.
Speaker SPEAKER_02: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  그러니까 여기에 사실 그 서버도 하나 있었어야 되는 건데  거기에 얘가 잘못 껴 들어간 게 맞습니다.
Speaker SPEAKER_03:  네 그렇죠.  이것도 시간 관계상 그랬던 건데
Speaker SPEAKER_03:  저희는 이제 진행할 때는
Speaker SPEAKER_03:  각자 그래프 그릴 때는  당연히 이제 좀 축도 좀 레인지도 다를 수 있고
Speaker SPEAKER_03:  뭐..  포맷이나 아니면 이제 스타일이 다 다를 텐데
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  안 적어서 아마 이렇게 질문 주신 거 같은데  맞나요? 준혁님?
Speaker SPEAKER_00:  네 맞습니다.
Speaker SPEAKER_03:  이게 정확히 몇 대 몇 정도 되냐고?
Speaker SPEAKER_03:  질문 주신 게 맞을까요?
Speaker SPEAKER_02: 
Speaker SPEAKER_03:  이게 한 8 대 2 정도 됐던 걸로 알고 있거든요.  네 맞습니다.
Speaker SPEAKER_03:  맞아요. 맞아요.
Speaker SPEAKER_03:  제가 사실 보고서까지 작성한 게 아니라서요.  근데 이것도 구체적인 값으로 있으면
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  8 대 2라는 게 있었는데  제가 빼버렸거든요.
Speaker SPEAKER_03:  글자 같은 거를 빼는 과정에서  원래 제가 처음 받았던 PTN이 있었는데  제가 빼버렸어요.
Speaker SPEAKER_03:  이게 이렇게 그래프로 이만큼 양이라는 게 보이는데
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  이 노트북으로 치자면 여기에 이제 정확히 그 값이
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  아 이거 뭐.  아 이거 뭐.
Speaker SPEAKER_03:  모르겠는데 여하튼 뭐
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  아니면 8 점 몇몇 대 2점 몇  아니 뭐 1 점 몇몇 뭐 7 점 몇몇 대 2점 몇몇 이렇게 있으면은
Speaker SPEAKER_03:  더 좋을 것 같다는 말씀이신가요?
Speaker SPEAKER_03: 
Speaker SPEAKER_00:  그래프만 보면은 딱 보면 엄청 크게 차이가 나와보이잖아.  그렇죠.
Speaker SPEAKER_00: 
Speaker SPEAKER_00: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  아 약간 너프하기라도 막 아주 정확하게 막 소수점까지는 없더라고  네 대략적으로는 그렇습니다.
Speaker SPEAKER_00: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  그 단계로 다 확인을 해봤는데.  그 단계로 다 확인을 해봤는데.
Speaker SPEAKER_03:  그러니까 저 이거 모델 같은 경우에는 빌딩을 했더니 예측력이 엄청  높게 나오는 거예요.
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  7 대 3으로 그 테스트에다가 그 레코더를 많이 줬거든요.
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  그렇게 해서 한번 검증해 보고 그리고 k볼드로 나눠서도 잘 알 수 있는
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  나눠서도 검증해봤죠. 이게 이제 과적합을 진행하는, 확인하는 거니까.
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  그래서 이것도 어떻게 보면 설명이 좀 부족해서 그런 것 같은데, 뒤에 나오는 이 모든 이 수치는 테스트 값에 대한 수치.
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  아마 혜수님 질문에서도 있었던 것 같은데.
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  그건 트레이닝셋이 아니어서 그래요. 테스트셋이어서 그래요.
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  저는 사실, 그것도 한번 얘기를 해보면 좋겠지만, 트레이닝셋의 예측도를 보여주는 게 의미가 있나 싶었어요.
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  테스트셋에서, 빌딩한 모델이 테스트셋에서 어떤 스코어가,
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  그래서 사실 좀 뺀 게 있고, 그래서 그 컴퓨젼 매트릭스도 테스트셋에 대한 것만 있었던 거고, 그래서 그 값이 적었던 거고.
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  과적합은 이렇게 확인을 해봤어요.  근데 이것도 제가 진행을 하면서 조금 이제 의문이고, 확인해봐야겠다 하면서 못하고 넘어간 게,
Speaker SPEAKER_01: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  근데 크로스 밸리데이션을 써서 확인했으면 테스트랑 트레인을 나눌 필요 없이 그냥 전부 다 값을 써도 되는 게 아니었나?
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  그러니까 이걸 먼저 진행해서 보여준 다음에, 레코드를 테스트로 희생하지 말고, 전부 다 써도 되지 않나?
Speaker SPEAKER_03:  네.  라는 생각이 있었고, 그게 일단 하나고, 두 번째로 다 쓰지 않더라도 이렇게 이중으로 확인하는 게 뭔가 더 철저하게 확인한다는 느낌이라기보다는 중복이 아닌가 싶었어요.
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_02: 
Speaker SPEAKER_03:  그러니까 혹시 다른 분들은 어떻게 진행했는지 제가 지금 정확히 기억이 안 나는데,
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  크로스 밸리데이션을 했으면 테스트랑 트레인을 나눠서 그 값을 보여주는 게 좀 의미 없는 거 아닌가요?
Speaker SPEAKER_03:  이거는 사실 그 트레인하고 테스트를 엄청 많이, 다섯 번이나 해서 보여주는 거잖아요?
Speaker SPEAKER_03:  이거 각각이 이제 그 테스트랑 트레인을 나눈 건데,
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  근데 지금 이거는 제가 7대 3으로 랜덤하게 나눈 거에 대한 값이죠.
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  근데 이게 사실 이거 하나 정도의 정보가 아닌가?  근데 왜 중복이라고 생각하면서 그냥 이렇게 진행됐냐?  그거는 사실 처음에는 트레인이랑 테스트를 나눠서 다 전부 진행한 다음에,
Speaker SPEAKER_03:  아, 맞다. 근데 크로스 밸리데이션도 한 번 해볼까? 하면서 추가를 했기 때문에,  이거에 맞춰서 앞단 코드를 다 바꾸기가 조금 부담스러워가지고,  그냥 진행하느라고 겹쳐서 둘 다 들어가 있는 거죠.  이거는 랜덤 30%에 대한 테스트, 얘는 5개를 크로스 밸리데이션에 대한 테스트,  얘는 5개를 크로스 밸리데이션에 대한 테스트, 얘는 5개를 크로스 밸리데이션에 대한 테스트,  얘는 5개를 크로스 밸리데이션에 대한 테스트,  얘는 5개를 크로스 밸리데이션에 대한 테스트,  7개를 크로스 밸리데이션에 나눈 거에 대해서 4 대 1, 4 대 1, 4 대 1, 계속 이렇게 비교가 된 거잖아요.
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  아, 그래서 혹시 다른 분들은 어떻게 하셨나요?
Speaker SPEAKER_03:  이거 모델 빌딩할 때 크로스 밸리데이션 일단 하셨었나요?
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_00:  일단 저희는 여러 모델을 비교하고 설명을 하셨잖아요.
Speaker SPEAKER_00: 
Speaker SPEAKER_03:  아, 그러면은 04SPEAKER_04님도 다 둘 다 한거네요.
Speaker SPEAKER_03:  잉 сложно 활발한格 Sri Volkswagen요
Speaker SPEAKER_02: 
Speaker SPEAKER_03:  My wife got auestaseyder max 저희 teacher in front of me works about 10 days, there's a TV controlled.  si version of Argentundi music. which is 2 years.  beaches come to visit it after this show. there are some things I just didn't do in a while.  라는 생각이 들어서요
Speaker SPEAKER_03: 
Speaker SPEAKER_00: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_02: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  저희가 뭐 어디 보고를 하거나 포포를 짜거나 할 때
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_04: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  지금은 이제 간략하게 질문에 대한 것을 답변하고 넘어가서  준형님 이거 과적합력 확인은 답변이 됐을까요
Speaker SPEAKER_03: 
Speaker SPEAKER_02: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  빠르게 넘어가면서 얘기해 볼 수 있을 것 같아요
Speaker SPEAKER_03:  이렇게 이제 더 파보려고 했던 거예요
Speaker SPEAKER_03:  너무 그런 저 같으면 제가 실무담동자라면  그런 대답을 할 가능 보일 것 같은 거예요  어쩌라고
Speaker SPEAKER_03:  어 뭐 이 사람이 하신 거 뭐 저 모바일 서비스 관둘 것 같아
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  이 사람이 뭐 퇴사할 것 같아
Speaker SPEAKER_03:  어쩌라고 어떻게 해야 줄일 수 있는데 그건 네가 알아서 이러면  뭐야 이거 별로 그닥 크게 의미가 없는 거 아닌가 그런 이제
Speaker SPEAKER_03:  어떻게 조금 더  해 주는 방법이 없을까 해 가지고 이제 이중으로 분석을 해봤고
Speaker SPEAKER_03:  그다음에 이제 저는 이게 실제로 쓰일 수 있느냐 없느냐  쉽게 그냥 뭐 교육 과정에 프로젝트 수준이 아니었으면 해 가지고
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  64까지 진행을 했어요
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_02: 
Speaker SPEAKER_02: 
Speaker SPEAKER_00: 
Speaker SPEAKER_00: 
Speaker SPEAKER_03:  근데 지금 이런 것들도 같이 생각을 해보면 좋을 것 같아요
Speaker SPEAKER_03:  너의 내용
Speaker SPEAKER_03:  그러면 뭘 빼면 뺄 때마다 정보가가 손실 되긴 하는데 다 넣을 순 없으니까 뭘 빼고 뭘 넣어 줄지를
Speaker SPEAKER_03:  생각해 볼 수 있어요
Speaker SPEAKER_03:  이거는 아마 혜수 님도
Speaker SPEAKER_03:  아닌가
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  네  AUC 스코어를 이제  불균형이라 보다는 얘가 모든 그  예측 성능을 포괄하고 있는 값이라고 생각해서
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  예측 성능을 포괄하고 있는 값이라고 생각해서 이걸로 일단 구분을 한 다음에 뭐 에펌스코어 같은 거를 약간 재확인한 그런 느낌으로  진행을 해서 AUC 스코어로 진행을 했고
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_02: 
Speaker SPEAKER_03:  잘못 적었어요 저도 잘 몰랐어 가지고
Speaker SPEAKER_03:  그래서 제가 계속 더 피드백이나 이런 게 너무 아쉬웠던 건데
Speaker SPEAKER_03:  내가 생각하기에는 허점이 많은 것 같은데  왜 다들 아무 말도 없고 좋다고만 하지
Speaker SPEAKER_03: 
Speaker SPEAKER_02: 
Speaker SPEAKER_03:  네 그래서 혹시 뭐 02SPEAKER_02님 제가 답변한 것 중에 뭐
Speaker SPEAKER_03:  더 질문 있으실까요? 아니면 답변 있으면 됐나요?
Speaker SPEAKER_03:  음 네
Speaker SPEAKER_03:  예 혜수님
Speaker SPEAKER_00:  질문은 근데 거의 이 대답이 됐고  아  아  네 이게 전혀 설명이 없어요
Speaker SPEAKER_03:  참 안타까운 점이죠
Speaker SPEAKER_03:  그런 데이터도 있었어요  이 사람이 언제 입사해서 언제 퇴사했다  사실 그런 날짜 정보가 있으면 엄청나게 좋거든요  그러면 향후 몇 년 안에 퇴사할 가능성 예측
Speaker SPEAKER_03:  엄청나게 좋은데  그런 애들은 많이 안 들어요  이런 애들은 막 레코드가 101SPEAKER_01개 막 이래요  아 이거 갖고  아 컬럼은 좋은데 이거 갖고
Speaker SPEAKER_02: 
Speaker SPEAKER_03:  진행하기가 너무 아쉽다 싶어 가지고
Speaker SPEAKER_03:  현재 그 여기서 사용된 데이터셋이
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  가장 큰 메리트는 레코드가 많다  사실 컬럼은 조금 아쉬운 데이터셋이었는데
Speaker SPEAKER_03:  중복이 있기는 해도 그래도 뭐 101SPEAKER_010개 정도 되고
Speaker SPEAKER_03:  한 그 전체는 한 1201SPEAKER_01개 정도?
Speaker SPEAKER_03:  1201SPEAKER_01개 정도 됐던 거?
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  예 101SPEAKER_010 몇백 개 정도 됐던 거 같은데  그렇게 아니지  만 몇천 개 정도 됐던 거 같은데
Speaker SPEAKER_03:  몇천 개 정도 되는 게 없었어요
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  근데 이게 차이가 너무 극단적이었어요  그러니까 얘는 이만큼 막 만 개 가까이 되는데
Speaker SPEAKER_03:  중복을 빼도  다른 애들은 101SPEAKER_01개 201SPEAKER_01개 301SPEAKER_01개 101SPEAKER_010개 넘어가는 것도 거의 없는 거예요
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  그래서 아 그리고 이제 이때는 더군다나
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  머신러닝 모델을 아직 만들어 본 적이 없었기 때문에
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  저 같은 경우에는 한 번도 만들어 본 적이 없어서
Speaker SPEAKER_03:  좀 더 그 레코드가 많은 거 위주로 골랐고요  이게 저희가 그냥 분석해서 배시보드 만들고
Speaker SPEAKER_03:  EDA 하는 거였으면은 컬럼을 좀 더 중점적으로 봤을 텐데  모델을 구축하는 거고  그다음에 또 모델을 그 회기 모델도 만들고
Speaker SPEAKER_03:  이집 모델도 만들고  이제 여러 형태로 만들려고 했을 때는  레코드 수가 좀 중요하다고 생각했어요
Speaker SPEAKER_03:  그래서 이 컬럼은 조금 아쉬웠던 게 있거라
Speaker SPEAKER_03:  아니 저도 이거를 좀 알려주면 좋을 텐데
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_02: 
Speaker SPEAKER_00: 
Speaker SPEAKER_03:  01SPEAKER_01님도 이제 이 서비스
Speaker SPEAKER_03:  일단의 설명이 좀 없었던 거
Speaker SPEAKER_03: 
Speaker SPEAKER_04: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  근데 이것도 저희가 생각해 보면 좋을 것 같아요  서비스를 일단 진행을 하려고 하는데
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  제가 알기로 저희가 AWS까지 연결을 한다고 하면
Speaker SPEAKER_03:  이 서비스화 자체가 백엔드나 프론트엔드를
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  합쳐서 풀스택으로 개발을 하는 거라서
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  이거 자체로 분량이 상당할 거란 말이에요
Speaker SPEAKER_03:  근데 저희는 다른 얘기를
Speaker SPEAKER_03:  분석 얘기를 좀 더 분량을 넣어주고 싶은 거니까
Speaker SPEAKER_03:  얼마나 이거를 넣어줘야 되는지
Speaker SPEAKER_03:  여기서
Speaker SPEAKER_01:  맞아요 맞아요
Speaker SPEAKER_03:  분석 쪽 또 모델이나
Speaker SPEAKER_03: 
Speaker SPEAKER_01: 
Speaker SPEAKER_01:  맞아요 맞아요
Speaker SPEAKER_04: 
Speaker SPEAKER_02: 
Speaker SPEAKER_04: 
Speaker SPEAKER_04: 
Speaker SPEAKER_03: 
Speaker SPEAKER_04: 
Speaker SPEAKER_01: 
Speaker SPEAKER_01:  이거 trabalhar 결정을 하는 거  Joits  적 deficits  right right  yeah yeah  it's a trap  Armour osp flying  armctica 啊  근데 좀 단결해졌다? 그런 느낌이 있었어가지고
Speaker SPEAKER_04:  이거 trabalhar 결정을 하는 거
Speaker SPEAKER_03:  Armour osp flying  armctica 啊  근데 좀 단결해졌다? 그런 느낌이 있었어가지고
Speaker SPEAKER_04: 
Speaker SPEAKER_01: 
Speaker SPEAKER_04:  그냥 복지 찾으려고 준비했던 것 같습니다.
Speaker SPEAKER_01: 
Speaker SPEAKER_03:  네 맞아요. 그리고 약간 팀 내부적인 이슈로
Speaker SPEAKER_00: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  이 서비스는 진짜 완전히 혼자 할 수 밖에 없거든요.  정보를 찾거나 그런 것까지도 전부 다.
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  설명을 만들거나 이해를 하거나 그런 거랑 같이 진행을 해서
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  다른 팀원들이 작성해 주신 건데 서비스는 그럴 수가 없어서.
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  네.  그래서 이제 좀 더 적었던 것도 있는 것 같아요.
Speaker SPEAKER_03: 
Speaker SPEAKER_02: 
Speaker SPEAKER_03:  그리고.
Speaker SPEAKER_02: 
Speaker SPEAKER_03:  음 맞아요. 이거는 말씀하신 게 맞습니다.
Speaker SPEAKER_02: 
Speaker SPEAKER_03:  근데 이것도.
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  완전히 엄밀하지는 못했어요.  무슨 얘기냐면 저희가 선택한 모델이 XGBOOST인데 이게 빌딩 시간이라는 게
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  어 로컬단에서 그냥 돌리는 거기 때문에 돌릴 때마다 조금씩 달라지는 게 있어요.
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  차이가 크지 않다면.  그래서 예측 성능이 두 모델이 크게 차이가 안 나고 그 빌딩 시간도 크게 차이가 안 날 때는 자동으로 이제 파이썬 코드 내에서 높은 거 무조건 조금이라도 높은 걸 선택해서.
Speaker SPEAKER_03:  네. 그래서.  이걸로 진행하게 하면 바뀌는 거예요.
Speaker SPEAKER_03:  그다음에 뭐가 선택돼도 그 차이가 크지 않고.
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  음.
Speaker SPEAKER_03:  좀 주관적인 매뉴얼한 처리가 들어가기는 했습니다.
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  그래서.  그.  제가 공유하는 그 코드에 보면은.
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  이제 얘가 파이프라인이 돌아가면서 여기에서 이제 이게 선택돼서 이걸로 이제 알아서 밑에 분석을 진행하게끔 만들었는데.
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  엑스 지 부스트가 아예 박았어요.
Speaker SPEAKER_03:  .  .
Speaker SPEAKER_04: 
Speaker SPEAKER_03:  .  .
Speaker SPEAKER_03:  .  .  .  .  .  .
Speaker SPEAKER_03:  .  .  .
Speaker SPEAKER_03:  .  .
Speaker SPEAKER_03:  .  자동화 파이프라인을 만들긴 했지만 약간 그 자동화를 깨버리고 그 xgboost를 선택한 게 있긴 합니다.
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  퍼포먼스를 기준으로 만들어 보려고 했는데
Speaker SPEAKER_03:  이게 일단은 예측 시간이랑 성능이 단위값도 다를 뿐더러 그 차이가
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  대로 차이가 트레이닝 시간 같은게 너무 극적으로 나서 아무리 이거 예측값을 잡기  돼도 얘가 너무 많이 잡아먹게 되고 균형을 찾기가 어렵더라구요.  그래서 자동화를 하려다가 약간 실패했다는 말씀을 드립니다.  아 이 퍼포먼스 넣어가지고 내가 아예 이 가중치 값까지 찾아봐야겠다 하다가
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_02: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  처리는 그냥 중복행 제거하고 인코딩 한거죠.
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  네 표준화 한거가
Speaker SPEAKER_02: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_00:  저는
Speaker SPEAKER_00: 
Speaker SPEAKER_04: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  안정망 같은 걸로 놨던 프로젝트이기 때문에
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  감사합니다.  그래서 오늘 이런 프로젝트 때문에
Speaker SPEAKER_03:  어떤 추가적인 의견이나 이런 거를 수정했으면 좋겠다던가 추가해 볼 수 있겠다던가 뭐 어떤 거라든지
Speaker SPEAKER_03:  추가적인 의견 같은 게 있는 게 있을까요?
Speaker SPEAKER_01:  맞아요.
Speaker SPEAKER_01:  그런 페이지를 생각해서
Speaker SPEAKER_01:  맞아요 그런 것도 없죠
Speaker SPEAKER_03:  맞아요 그런 것도 없죠
Speaker SPEAKER_01: 
Speaker SPEAKER_01: 
Speaker SPEAKER_01: 
Speaker SPEAKER_04: 
Speaker SPEAKER_03: 
Speaker SPEAKER_04: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_04: 
Speaker SPEAKER_04: 
Speaker SPEAKER_01: 
Speaker SPEAKER_04: 
Speaker SPEAKER_03: 
Speaker SPEAKER_01: 
Speaker SPEAKER_04: 
Speaker SPEAKER_01: 
Speaker SPEAKER_03:  이게 지금 아예 값을 좀 넣어보면
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  형태기든 하거든요 현재
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  이 사람은 그냥 퇴사가 예측이 안 된다고 한 설명이 있었는데
Speaker SPEAKER_03:  이렇게 관두려면 이런 방법을 써보면 줄어들 수 있겠다고 생각합니다
Speaker SPEAKER_02: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  그건 사실 파이썬 모듈도 마찬가지예요  파이썬 모듈도 그냥 얘를 딕셔너리 형태로 리턴하는 값이라
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  사용성이 아주 좋지는 않을 수 있다고 생각해요  그러면 그 딕셔너리 내에서 키 값으로 따로 원하는 밸류를 뽑아야 되니까요
Speaker SPEAKER_02: 
Speaker SPEAKER_03: 
Speaker SPEAKER_02: 
Speaker SPEAKER_02: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  only
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_01:  네  네  네
Speaker SPEAKER_04: 
Speaker SPEAKER_04: 
Speaker SPEAKER_01: 
Speaker SPEAKER_01: 
Speaker SPEAKER_01: 
Speaker SPEAKER_01: 
Speaker SPEAKER_04: 
Speaker SPEAKER_04: 
Speaker SPEAKER_01: 
Speaker SPEAKER_01:  그때 아마 제가 아니라 다른 분이 하셨다고 말씀을 하셨을 텐데  저도 이 해틀도 진짜 그냥 구경만 한 정도가
Speaker SPEAKER_02: 
Speaker SPEAKER_01: 
Speaker SPEAKER_01:  HTML, CSS, JavaScript 장비를 해본 적은 있어요
Speaker SPEAKER_01: 
Speaker SPEAKER_04: 
Speaker SPEAKER_03: 
Speaker SPEAKER_02:  그럼 네 분 다 있으시구나
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  이게 주인공이 아니니까, 서비스가 완전 주인공이 아닙니까, 마무리 느낌인지
Speaker SPEAKER_03:  막 리액트 써서 엄청 진지하게
Speaker SPEAKER_03:  진짜 서비스 같은 그런 디자인 같은 영역 말고
Speaker SPEAKER_03:  프론트단을 이렇게 만들어주면 좀 더 쓸만하겠다 하는 거
Speaker SPEAKER_03: 
Speaker SPEAKER_01:  선생님적인 요소가 들어가면 좋긴 하는데
Speaker SPEAKER_01:  제가 근데 그게 너무 좋은데
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  제가 그걸 지금 정확히 모르겠어 가지고  저는 프론트나 이런 것도 해본 적이 없으니까
Speaker SPEAKER_03:  그게 얼마나 큰 작업인지
Speaker SPEAKER_03:  그 정도 시간 쓰는 거, 몇 시간 정도 시간 쓰는 거는
Speaker SPEAKER_03:  근데 이게 만약에 생각보다 되게 큰 프로젝트가
Speaker SPEAKER_03:  작업량이 돼 가지고
Speaker SPEAKER_03:  그 시간에 차다리 우리가 데이터를 좀 더 만져본다거나
Speaker SPEAKER_03:  EDA를 좀 더 해본다던가 모델 최적화를 더 하는 게 낫지 않을까  그렇게 될 수 있을 것 같아서  제가 감이 없어 가지고 여쭤보는 거예요  네 분은 그래도 조금이라도 프론트를 진행해 본 경험이 있다고 하시니까  얘를 이제 수정하는 게
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  그래도 가능은 해 보이신다면요
Speaker SPEAKER_01:  개인적으로 저는 항상 이렇게 웹 할 때마다
Speaker SPEAKER_01:  디자인이 진짜 저도 디자인 감각이 좋은 편은 아니라서
Speaker SPEAKER_01:  제목에 색깔을 넣는 거를  그런 거 같다 안 해 가지고  그런 거는 진짜 빨리 되긴 하거든요
Speaker SPEAKER_02:  제목에 색깔을 넣는 거를
Speaker SPEAKER_02:  그런 거는 진짜 빨리 되긴 하거든요
Speaker SPEAKER_01:  아 좋습니다
Speaker SPEAKER_00: 
Speaker SPEAKER_01:  그래서 꼭 진짜 웹사이트처럼 예쁘게 만든다고 한 거  그건 되게 소중한 것 같아요
Speaker SPEAKER_03:  혹시 다른 분들은 어떠세요?
Speaker SPEAKER_02: 
Speaker SPEAKER_04: 
Speaker SPEAKER_00:  사실 하다 보면 안에 패턴치가 조금 바뀌고  그리고 이제 안에 있는 구조가 조금 바뀔 때마다  많이 어필하게 되는 그런 부분들이 많을 거예요
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  조금 이거 여기 뭐야
Speaker SPEAKER_01: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  아 그래서 그런 부분은
Speaker SPEAKER_04:  버튼 여기로만 옮기려고 해도 되나요
Speaker SPEAKER_03:  그런 거 좀 더 아마 다른 프로그램에서 원활하게
Speaker SPEAKER_00:  가마스터로 이렇게
Speaker SPEAKER_00:  그런 부분은 좀 이상할 수 있다면 모르겠는데
Speaker SPEAKER_00: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  약간 개선이나 다듬는 느낌은 충분히 가능하겠네요  아 근데 제가 그때 같이 모였을 때
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  네 분 다 경험이 있네요
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_01: 
Speaker SPEAKER_03:  사실 저도 패스트 아이페를 써본 게 아니라  장고를 써본 건데
Speaker SPEAKER_03:  이거 장고가 조금 더 그 빌딩하는데 무거울 것 같아서
Speaker SPEAKER_03:  혹시 다른 분들도 그 백엔드 경험 있으신 분 계신가요?
Speaker SPEAKER_03: 
Speaker SPEAKER_00: 
Speaker SPEAKER_03:  어쨌든지간에 경험이라는 측면에서 봤을 땐  5명 중에 2명은 백엔드 경험이 있고
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  아 그리고 저도 뭐 이거 만들었으니까  조금은 있다고 할 수 있겠죠
Speaker SPEAKER_03: 
Speaker SPEAKER_00: 
Speaker SPEAKER_03:  네
Speaker SPEAKER_03:  그래서 그  네
Speaker SPEAKER_03:  네  virtually
Speaker SPEAKER_03:  con
Speaker SPEAKER_03:  이렇게
Speaker SPEAKER_03:  이런 거
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_00:  약간  들고  고음  같은 그런 게 있는데 이게 도료로 하루에 1,01SPEAKER_010,01SPEAKER_010원까지 올려서 할 수 있다는 게 있었고
Speaker SPEAKER_00:  그게 하나로 안 치는 거 같기도 한 것 같더라고요
Speaker SPEAKER_03: 
Speaker SPEAKER_04: 
Speaker SPEAKER_00: 
Speaker SPEAKER_00: 
Speaker SPEAKER_00:  아무래도 그렇게 할 수 있다면  뭔가 저희가 생각하는 걸로 생각하는 것보다 좀 해볼 수 있단 생각이 들어요
Speaker SPEAKER_00: 
Speaker SPEAKER_00: 
Speaker SPEAKER_00: 
Speaker SPEAKER_00:  고맙게
Speaker SPEAKER_02: 
Speaker SPEAKER_00: 
Speaker SPEAKER_00: 
Speaker SPEAKER_03:  네 좋습니다  혹시 다른 분들도 진행 중인 거 있으신가요?
Speaker SPEAKER_00: 
Speaker SPEAKER_00: 
Speaker SPEAKER_01:  이거 1초 소중해  1초 소중해  1초 소중해  1초 소중해
Speaker SPEAKER_01:  감사합니다  네, 감사합니다  Methi가 좀 개방적이지 않습니까? FAX Part 3  네  K-POP kulik
Speaker SPEAKER_01:  네  K-POP을 하려고 ang 감사합니다
Speaker SPEAKER_01: 
Speaker SPEAKER_01:  맞아요 하죠 mesуть 10 fase 따라가지고  적당히 정 오는 거라 반응이 элем섭니다  그렇다면 감을 키우는 방법은
Speaker SPEAKER_01:  그냥  K-POP..
Speaker SPEAKER_03:  근데 아마 주식페이지에서 크롤링을 못해가게 하지 않나요?
Speaker SPEAKER_03: 
Speaker SPEAKER_01:  야후에 있는 어떤 페이지가 크롤링 가능하다고 그런게 있더라구요  그래서 그냥 아직 건드려보진 않았지만
Speaker SPEAKER_02: 
Speaker SPEAKER_00: 
Speaker SPEAKER_01:  뭐 이런게 있구나 라고만 들었었어요
Speaker SPEAKER_03:  01SPEAKER_01님도 지금 궁금 계신가요?
Speaker SPEAKER_02: 
Speaker SPEAKER_02: 
Speaker SPEAKER_01:  아 좋습니다
Speaker SPEAKER_04:  그래서
Speaker SPEAKER_03:  그래서
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_00: 
Speaker SPEAKER_00: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  아
Speaker SPEAKER_03:  제가
Speaker SPEAKER_03:  아 뭐 아이디어는 이것저것 생각이 나지만  맞는
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_04: 
Speaker SPEAKER_04: 
Speaker SPEAKER_03:  아 이래서 정말 그 데이터가 자산이구나 하는 생각이 많이 들었고
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  제가 더더욱 지금
Speaker SPEAKER_03:  지금 얘네 다 한 30시간씩 돌아가고 있거든요  컴퓨터가 비명을 지르고 있는 거
Speaker SPEAKER_03:  첫번째 거 돌렸을 때는 한 4시간 만에 돌아갔는데  아 이거 왜 또  근데 얘가 지금 1분씩 수출하면 다 작동되는 코드거든요
Speaker SPEAKER_03:  어 근데 지금 1시간 반쯤 되긴 해도
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  뭐 이게 중요한 게 아니라
Speaker SPEAKER_03:  그래서 이 추가작업이 있기 때문에
Speaker SPEAKER_03:  지금은 제가 이제 이것저것 해보고는 있는데  이 1차 데이터 수집을 여기에서 추적하고
Speaker SPEAKER_03:  이 다른 프로젝트는
Speaker SPEAKER_03:  그니까 약간 저희가 뭐라 해야 되나
Speaker SPEAKER_03:  어
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  같은 걸 할 때
Speaker SPEAKER_03:  이 다른 프로젝트 하나도  저희 협업 분석하는 거 말고 나머지 하나도  꼭 1차 데이터 수집까지 갈 필요는 없겠다는 생각을 했어요  약간 그러면 너무 버거울 것 같다는 생각이 들었고  그래서 이제 제가 아까 말씀드린 것처럼
Speaker SPEAKER_03:  이거를 처음 생각에는 이 페이지가 있으니까
Speaker SPEAKER_03:  아예 이런 거 데이터를 직접 모아갖고
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  이걸 보여주면 되니까
Speaker SPEAKER_00: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  주제 탐색하시는 게
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  그게 원활하게 가능하면은 너무 좋겠지만은
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_04: 
Speaker SPEAKER_03:  어
Speaker SPEAKER_00:  그럼 오늘 사단이라는 게 혹시
Speaker SPEAKER_01: 
Speaker SPEAKER_00: 
Speaker SPEAKER_01:  네
Speaker SPEAKER_01:  아 이런 거 있어요?  네 맞아요  어 어떤
Speaker SPEAKER_04:  이거 혹시
Speaker SPEAKER_02: 
Speaker SPEAKER_01: 
Speaker SPEAKER_03:  아 이거 혜수님이 이거 하셨다 그랬죠 했다가 취소했다 그랬죠
Speaker SPEAKER_03:  그래가지고 살 봐서 또 저도 이거 확인을 했었거든요
Speaker SPEAKER_00: 
Speaker SPEAKER_00: 
Speaker SPEAKER_01: 
Speaker SPEAKER_01:  근데 확인을 한다고 해야 되나?
Speaker SPEAKER_01: 
Speaker SPEAKER_00:  아니요 안 했어요  네  아 그 중간에 그 강사님의 경고를 듣고 안 했는데
Speaker SPEAKER_04: 
Speaker SPEAKER_03:  아 아 04SPEAKER_04님하고 저는 이제 강사님의 경고를 듣고 안 했는데
Speaker SPEAKER_03:  네
Speaker SPEAKER_03:  네  그래서 이거는 그 뭔가 확인 내용이 안 된 거죠?  어?
Speaker SPEAKER_03:  그 정보를 알 수 있는 건 아니니까
Speaker SPEAKER_03:  확인 내용이 안 된 거죠?  어?  정확하게 경고문에 있었던 내용이라고
Speaker SPEAKER_02:  아 제가 혹시 또 확인을 해야 할까
Speaker SPEAKER_02: 
Speaker SPEAKER_01: 
Speaker SPEAKER_00: 
Speaker SPEAKER_02: 
Speaker SPEAKER_00:  그 이미 모른 척 시켰는데
Speaker SPEAKER_01:  아 네
Speaker SPEAKER_01: 
Speaker SPEAKER_03: 
Speaker SPEAKER_02: 
Speaker SPEAKER_03: 
Speaker SPEAKER_01: 
Speaker SPEAKER_01: 
Speaker SPEAKER_03: 
Speaker SPEAKER_01: 
Speaker SPEAKER_01: 
Speaker SPEAKER_04:  네
Speaker SPEAKER_03:  네  네  네  네  네  네  그렇다면 어떻게 해야 하나 뭐 미국에서 한국 경찰한테 연락해서
Speaker SPEAKER_02: 
Speaker SPEAKER_03:  아 그러네요 그냥 그 결제의 정보만 끊어 버려도 되는 거 아니에요
Speaker SPEAKER_03: 
Speaker SPEAKER_00: 
Speaker SPEAKER_03:  네  네  이거 끊어버리면 청구 못하는 거잖아요
Speaker SPEAKER_00:  네
Speaker SPEAKER_01: 
Speaker SPEAKER_04: 
Speaker SPEAKER_04: 
Speaker SPEAKER_01: 
Speaker SPEAKER_03:  아 두 분 다 비슷하니까 바로 끊으면 그 정도 나오나봐요 0.1 와 근데 그것도 좀
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_04: 
Speaker SPEAKER_00: 
Speaker SPEAKER_03:  아 근데 이 분은 이제 의도하신 건 아니겠지만 저희한테 굉장한 교육효과를 보여주셨어요
Speaker SPEAKER_03:  강사님이 경험하신 거를 실제로
Speaker SPEAKER_03:  뭔가 아 이렇게 하면 안전벨트 안 하면 사고 났을 때 큰일 납니다 말로 듣는 것보다는 진짜로 옆에 사람이에요
Speaker SPEAKER_02: 
Speaker SPEAKER_03: 
Speaker SPEAKER_02: 
Speaker SPEAKER_03: 
Speaker SPEAKER_02: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_01: 
Speaker SPEAKER_01:  е
Speaker SPEAKER_03:  A 그� superficially
Speaker SPEAKER_03:  개발
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  웹페이지 시연 때문에 지금 제가 창 한 20개 정도 열어 놓은 것 같은데
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  그래도 한 30기가 정도 먹더라고요.  아 여튼 그래서 지금 제가 구글 클라우드에도 이거 영상에서 받아주는 서비스가 있거든요.
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  1분당 요만큼이라 이렇게만 보면 할만한데 내볼까?
Speaker SPEAKER_03: 
Speaker SPEAKER_02: 
Speaker SPEAKER_03:  아 근데 그러다가
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  아 그러니까 이런 온 디멘드가 참
Speaker SPEAKER_03:  개인은 쓰지 마라 이런 느낌이 좀 들어요.
Speaker SPEAKER_03:  네 약간 개인은 쓰지 마라.  네가 개인 수준에서 감당할 게 아니다.  이게 아무리 적어도 이게 사실 AWS도 이런 걔네들이 한 단위 뭐  그 측정값당 달러는 되게 작잖아요.
Speaker SPEAKER_02: 
Speaker SPEAKER_03:  예 근데 이제 뭐야 이거
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  아 그게 약간 이런 느낌인 거잖아요.
Speaker SPEAKER_02: 
Speaker SPEAKER_02: 
Speaker SPEAKER_02: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  근데 아마 구제 방법이 있을 것 같긴 해요.
Speaker SPEAKER_03:  뭔가 그 올라온 여러 그 AWS
Speaker SPEAKER_03:  네 취소는 곧 잘 해준다고 했던 것 같아요.  상한은 없어도 실수다 뭐 하면은
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  근데 이제 그거 자체가 피말리죠.  이거 뭐 2주일 걸린다고 치면 101SPEAKER_01만 원인데
Speaker SPEAKER_03:  될 가능성이 90%여도 10% 가능성이 있잖아요.
Speaker SPEAKER_02: 
Speaker SPEAKER_03:  여러 번 강조해서 얘기하시긴 했는데
Speaker SPEAKER_03:  04SPEAKER_04이 또 저도 처음에 이거 AWS 켜서 따라가다가
Speaker SPEAKER_03:  강조를 여러 번 하시길래 그래서 제가 그때 모였을 때
Speaker SPEAKER_03:  아 강심장이시다 생각했거든요.  진행하셨다고 하셔서 아 경고를 그렇게 했는데  아 네.
Speaker SPEAKER_03:  네.
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  나머지 하나는 데이터 수집까지는 엄청 고민할 필요가 없겠다.
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_02: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  그 다음에 지금 어떻게 느끼시는지 모르겠지만 제가 이거 동영상 추출을 다 할 게 아니거든요.
Speaker SPEAKER_01: 
Speaker SPEAKER_03:  지금 이제 되는 걸 확인하려고 혼자 계속하고 있는데 컴퓨터가 이렇게
Speaker SPEAKER_03:  88% 101SPEAKER_01% CPU가 이렇게 올라가는 걸 본 적이 없어요.  그래서 지금 이렇게 지금 후 10시간을 돌리고 있는데 괜찮을지 잘 모르겠어요.
Speaker SPEAKER_02: 
Speaker SPEAKER_03:  텍스트를 추출하고 그다음에 그 추출한 거에서 지금 제가 분석한 이런 것도 각자 진행해 보고
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  이것도 제한점이 있고 개선할 점이 있고 할 거예요.  지금 이건 약간 된다는 거를 보여주기 위해서 제가.
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  근데 말이 좀 이상하게 나죠.  지금 혹시 하시면 지금 혹시 하시면 중국어로 나왔고 재밌었다 하고 완전 퀄리티가 보장되는 건 아니어서 이거 방법도 조금.
Speaker SPEAKER_02: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  이제 이렇게.  그냥 발화 기준으로 이제 분석을 할 건데.
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  그 주관적인.  느낌이랑 잘 맞아서.
Speaker SPEAKER_02: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  협업 분석에서도.
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  음.
Speaker SPEAKER_03:  여기까지 하고 이제 각자 찾아보시는 거 내일까지 확인하면.
Speaker SPEAKER_03:  그러면은 내일.
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  뭐 바꿀 항상 바꿀 수 있다 있지만.
Speaker SPEAKER_04: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  그 노션에 있다는 거.
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  여기에서 그 근데 용량들이 다 좀 되기는 해요.
Speaker SPEAKER_03:  몇 기가 정도 됐거든요.  네.
Speaker SPEAKER_03:  네.  네.  네.  네.  네. ress norteке� trabajo 얻을 때는 SAM sm t 일단 비디오요.
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  ...  ...
Speaker SPEAKER_03:  ...  ...
Speaker SPEAKER_03:  ...
Speaker SPEAKER_03:  ...  .  ...  .  ...  .  .  .  .  .  .  여러모로 같이 하면 좋을 것 같다는 생각입니다.  그래서 제가 올린 텍스트 추출 코드도 그렇고  SNA 코드도 그렇고  그것도 같이 한다는 거를 가정으로 올렸다는 거
Speaker SPEAKER_02:  그래서 제가 올린 텍스트 추출 코드도 그렇고
Speaker SPEAKER_03:  그게 완성본도 아니고
Speaker SPEAKER_03:  초안의 초안 정도의 느낌이라는 걸 말씀드리고 싶었습니다.
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  추출하는 시간이 오래 걸려서가 아니라 안 해봤기도 하고  저희가 텍스트 분석이라
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  얘는 전처리가 상당히 더 많겠죠.
Speaker SPEAKER_03:  다른 애들은 이런 엑셀 파일 같은 거는  사실 전처리가 돼 있는  어떻게 보면 좀 돼 있다고 볼 수 있잖아요.  엔지니어가 만들어줬다고 볼 수가 있는데
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  그래서 할 일이 많을 거라고 생각했지만
Speaker SPEAKER_03:  진짜로 맛 부닥치니까 엄청나긴 하네요.
Speaker SPEAKER_02: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  지금 저 사실 수업을 잘 못 듣고 있는데
Speaker SPEAKER_03:  지금 수업 내용도 목차를 보니까  Hugging Face랑
Speaker SPEAKER_03:  그 에르멘 모델 같은 거를 활용하는 방법 같은 건데  그것도 저희가 좀 활용할 만한 게 있지 않을까요?  SNA나 아니면 추가 분석하는 게  혹시 들으신 분들은 어때요?  좀 쓸만한 것들 있나요?
Speaker SPEAKER_01:  좋은 것 같아요.
Speaker SPEAKER_01:  저는 수업 듣고 있는데
Speaker SPEAKER_02: 
Speaker SPEAKER_01: 
Speaker SPEAKER_01: 
Speaker SPEAKER_03:  저희가 써보면 판단한 게 있을까요?
Speaker SPEAKER_01:  이거 일단 실전할 때
Speaker SPEAKER_01: 
Speaker SPEAKER_04: 
Speaker SPEAKER_01: 
Speaker SPEAKER_01:  거기서 모델 같은 거
Speaker SPEAKER_01:  집 연예인들이
Speaker SPEAKER_04:  집 연예인들이
Speaker SPEAKER_01: 
Speaker SPEAKER_04: 
Speaker SPEAKER_04:  기간이나 비전이나
Speaker SPEAKER_04: 
Speaker SPEAKER_01:  이런 걸 통해서.  그런 걸 통해서 얻을 수 있지 않을까.
Speaker SPEAKER_01:  가져가시는 것도  N4 프로모터로 펜션 하시더라고요.
Speaker SPEAKER_04:  가져가시는 것도
Speaker SPEAKER_03:  맞아요.  지금 혹시 보셨는지 모르겠는데
Speaker SPEAKER_01:  맞아요.
Speaker SPEAKER_03:  얘가 그렇게 하고 있는 거예요.  Hugging Face 통해서 추출하고 있는 거예요.
Speaker SPEAKER_02:  얘가 그렇게 하고 있는 거예요.
Speaker SPEAKER_03: 
Speaker SPEAKER_04: 
Speaker SPEAKER_04: 
Speaker SPEAKER_01:  감탄하고
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_01:  N4가 많이 들리는 거 같으신 것 같은데요.
Speaker SPEAKER_01: 
Speaker SPEAKER_03:  저희 텍스트 마이닝 쪽도 있었잖아요.  저저번 주였나?
Speaker SPEAKER_02: 
Speaker SPEAKER_04: 
Speaker SPEAKER_00: 
Speaker SPEAKER_03:  그 수업.
Speaker SPEAKER_02: 
Speaker SPEAKER_02: 
Speaker SPEAKER_03:  그것도 좀 써먹을 만한 게 있지 않을까요?  근데 제가 그것도 다 못 들어가지고
Speaker SPEAKER_03:  저는 사실 일주일 쉴 때 수업도 다 듣고  실습 같은 것도 마무리를 좀 할 생각이 있는데  다 이거 프로젝트 위주로 하고  계속 에러 코드
Speaker SPEAKER_02: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  이거 장난 아니거든요.
Speaker SPEAKER_03:  너무 시간이 많이 들어가지고
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_02: 
Speaker SPEAKER_03:  이렇게 뽑은 텍스트를 뭐 분석할 만한 거가  혹시 수업에 뭐 있었나요?
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  바라자이크 내용이니까
Speaker SPEAKER_04: 
Speaker SPEAKER_01: 
Speaker SPEAKER_04: 
Speaker SPEAKER_04: 
Speaker SPEAKER_03: 
Speaker SPEAKER_01:  뭐 이날 회의에 주제는 뭐였다 이런 것들
Speaker SPEAKER_04: 
Speaker SPEAKER_01: 
Speaker SPEAKER_04: 
Speaker SPEAKER_03: 
Speaker SPEAKER_04:  이게
Speaker SPEAKER_03:  아 근데 몰랐어. 전 여쭤봤는데
Speaker SPEAKER_01:  씨름하는?  아
Speaker SPEAKER_03: 
Speaker SPEAKER_04: 
Speaker SPEAKER_04:  궁금한 거 좀 있는데
Speaker SPEAKER_04: 
Speaker SPEAKER_04: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  컴퓨터 성능 되게 좋으신 분
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_04: 
Speaker SPEAKER_01: 
Speaker SPEAKER_00: 
Speaker SPEAKER_03:  다섯 명 다 넣었어요  맥 프로 쓰시는 분?
Speaker SPEAKER_00: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  M2가  거기서는 어떤지 궁금하긴 하네요
Speaker SPEAKER_03:  아니 이거 미쳤는데  지금 이거 몇 시간을 돌렸는데
Speaker SPEAKER_03:  아 그리고 항상 이럴 때마다 딜레마에요
Speaker SPEAKER_03:  끊고 코드 수정해서 다시 돌려야 되나?  이미 20시간 썼는데
Speaker SPEAKER_03:  그래서 지금 두 개 돌린 거예요
Speaker SPEAKER_03:  이게 지금 받아쓰기는 다 된 상태거든요
Speaker SPEAKER_03:  근데 받아쓰기만 해갖고는  누가 말했는지를 모르잖아요
Speaker SPEAKER_03:  그럼 일일이 써야 되는데  이게 양이 이만큼인데
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  들으면서 이거를 바라자를 적는 게
Speaker SPEAKER_03:  영상이 이거 하나도 아니고
Speaker SPEAKER_02:  영상이 이거 하나도 아니고
Speaker SPEAKER_03:  그 과정을 지금 진행하고 있는 건데  이때는 조금 자원을 덜 먹어서  다이얼 라이즈라고 하는
Speaker SPEAKER_03:  그래서 두 개를 돌려놨는데  두 개를 돌리고 지금
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  신음하고 있네요
Speaker SPEAKER_01:  근데 지금 이 코드
Speaker SPEAKER_01: 
Speaker SPEAKER_03:  사실 저 뭐야  여기 슬랙에 두 개 다 레포 올리긴 했거든요
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  여기 지금 화면 보이세요?
Speaker SPEAKER_01:  네 지금 보고 싶어서  아 맞아요
Speaker SPEAKER_03:  아 맞아요
Speaker SPEAKER_03:  아 왜냐면 제가 왜 그 맥을 여쭤봤냐면
Speaker SPEAKER_03:  이거가 지금 우분투  이거 혹시 WSL 써보신 분 계신가요?  아 잠깐만 그 네 분 컴퓨터 문형체제 뭐 어떤 거 쓰세요?  혜수님은 맥이고?
Speaker SPEAKER_01: 
Speaker SPEAKER_03: 
Speaker SPEAKER_01: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  이거에서도 있으신 분 계세요
Speaker SPEAKER_01:  Franclin
Speaker SPEAKER_01: 
Speaker SPEAKER_03: 
Speaker SPEAKER_00:  하나를 못 an
Speaker SPEAKER_02: 
Speaker SPEAKER_03: 
Speaker SPEAKER_04: 
Speaker SPEAKER_04: 
Speaker SPEAKER_03: 
Speaker SPEAKER_02: 
Speaker SPEAKER_03:  같은 코드를 윈도우 터미널에서 돌리면 에러가 나요.
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  컴퓨터를 하지 않다.
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  근데 얘가 유닉스 환경인 거잖아요.
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  이 리눅스를 윈도우에서 돌린 거니까
Speaker SPEAKER_03:  여기서는 돌아가요.
Speaker SPEAKER_03:  근데 제가 알기로 이 WSL이 유닉스를 윈도우에서 돌아가게 해주지만
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  트레이드 오프가 성능이라고 알고 있어요.  컴퓨터 윈도우 성능을 완전히 다 써지는 못하고
Speaker SPEAKER_03:  근데 이제 돌아가기는 해주고  근데 이제 네이티브 유닉스니까 맥은 아니면  리눅스 쓰시는 분 없죠?
Speaker SPEAKER_03:  그래가지고 혹시 맥 환경에서는 좀 더 잘 돌아가려나 하고요.
Speaker SPEAKER_02: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  오늘 지금 1시간 35분 진행했는데
Speaker SPEAKER_03:  일단은 이 정도 진행하면 될 것 같은데
Speaker SPEAKER_03:  혹시 뭐 더 내일 전까지 얘기하면 좋을 것 같다 하시는 분 있나요?
Speaker SPEAKER_03: 
Speaker SPEAKER_01:  내일까지 그 지적한 적 없는 거군요.
Speaker SPEAKER_03:  그렇죠.
Speaker SPEAKER_03:  지금 뭐 이 코드나 이런 거 확인해 보는 거는  이제 내일이 지나고
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  여유가 있으면 돼 그렇죠.
Speaker SPEAKER_01: 
Speaker SPEAKER_01:  브랜치 하는 거 해보자고 말씀드린다고 했거든요.
Speaker SPEAKER_01: 
Speaker SPEAKER_03:  아 좋아요 좋아요.
Speaker SPEAKER_03:  저 하나 궁금했던 게 있었는데
Speaker SPEAKER_01:  집 하는 중에 그 뭐지
Speaker SPEAKER_01:  제가 그 리스코드 넣으신다고 하셔서  리스코드 깔고 한 번 해봤는데  그 코드가 너무 힘들어서 메인 텍스트 파일을 제가 수정하잖아요.
Speaker SPEAKER_01:  네.  그리고 나서 코믹 치기 전에 원래 add를
Speaker SPEAKER_01:  이 add를 하고 코믹 치기 장비가 원래 그렇게
Speaker SPEAKER_04: 
Speaker SPEAKER_01:  근데 그 add가 이 plus 버튼이
Speaker SPEAKER_03: 
Speaker SPEAKER_01: 
Speaker SPEAKER_02: 
Speaker SPEAKER_01:  근데 add 없어서 제가 처음에 그냥 바로 코믹을 치니까
Speaker SPEAKER_01:  스펠링을 안 하고 그냥 그냥 이렇게  네.
Speaker SPEAKER_01: 
Speaker SPEAKER_01:  그냥 그게 그 add를 하겠냐는 말이 된다 이러던데
Speaker SPEAKER_04: 
Speaker SPEAKER_04: 
Speaker SPEAKER_03:  이거 근데 그게 없이 하겠냐가 아니라
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  전부 다 스테이지 시킬 건데 그대로 진행할 거냐 일 거예요.  이거 얘기하시는 거 아니에요
Speaker SPEAKER_04: 
Speaker SPEAKER_03:  네.  이거 여기서 예스 누르면은 그냥 이 전부 다 스테이지 시켜준다고
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  했는데  근데 저는 이거
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  그러니까 수동으로
Speaker SPEAKER_01: 
Speaker SPEAKER_03:  그러니까
Speaker SPEAKER_03:  그러니까 여기서 예를 들어서 제가 만약에 이거 차이를 이렇게  하면 얘만 스테이지 되잖아요.  네.
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  노클 단에만 이제 여기 이렇게 이제 그 입툭을 해주고 이런 식으로
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  이 파일에 로컬에 있는 Git에만 저장된 거잖아요.  아직 GitHub으로 업로드는 안 했고, 푸시는 안 했고.
Speaker SPEAKER_03:  근데 이제 여기에서 이거를 푸시 시켜주면
Speaker SPEAKER_03:  이제 GitHub으로 올라가겠죠.
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_01: 
Speaker SPEAKER_03:  창의 의미요?  제가 아무것도 안 하고 이 창의 의미는
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  아시겠지만 진행되는 과정이
Speaker SPEAKER_01: 
Speaker SPEAKER_03:  다 같이 얘기하면 너무 좋을 것 같아요.  Git이 저도 사실 지금도 헷갈리고  쓸 때도 헷갈리고 다른 분들도 다 헷갈리는데  근데 저희가 같이 진행하다가  이게 헷갈리니까  헷갈려가지고 다른 사람 거 덮어버리거나 이러면
Speaker SPEAKER_03:  재앙이거든요.  일반 회사에서도 그런 게 가끔 일어난다고는 들었어요.  재앙 같은 일이.  이제 팀장급이나 이런 사람들이 실수하면 그러겠죠.
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  잠깐만요.
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  여러분들도 takiejmiş용 demonstrates  바 SUR auf  미국 느낌이 마이크를  사면 거ariaife  they' trends  a of the  eclipse  온라인하고 싱크를 맞추는 건데 그게 어떤 느낌이냐면
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  근데 이제 그렇게 하면 GUI 없이 정말 코드로 다 쳐야 되고  스펠링 하나만 틀려도 에러나고 하니까
Speaker SPEAKER_03:  이제 이런 저 VS 코드에 쓸 때는
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  여기에서 스테이지를 시킨다는 의미는  여기서 전부 다 일괄 스테이지 시키는 것도 그렇고  처음에 이제 여기에서 깃을 아무것도 이제 안 돼 있는 상태에서
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  이 화면에 오면 이니셜라이즈 하겠냐고 하는데
Speaker SPEAKER_03:  이니셜라이즈를 하면 이런 콜더가 생겨서  여기네 깃을 저장을 해요 로컬단에
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  차이가 있는 애들이 여기 리스트로 다 뜨는 거고  이 리스트에서 제가 얘를 스테이지 시킨다는 거는
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  콜더에 있는 파일들 중 이전, 직전과 변화가 있는  업데이트된 파일들만 있는 거고  그 업데이트 중에서 얘만 내가 선택하겠다고 고른 거고
Speaker SPEAKER_03:  여기 스테이지 시킨 건 add한 게 얘만 고른 거고  얘를 골라서 제가 만약에 이렇게 터밋을 시키면  해서 이쪽으로 넘어가는 거는
Speaker SPEAKER_03:  여기다가 저장한 거죠
Speaker SPEAKER_03:  그래서 제가 이 콜더를 숨긴 콜더 지워버리면 이거 다 날아가요
Speaker SPEAKER_03:  다 날라가고  그럼 이 상태에서는 이제 다 여기에만 저장된 거고
Speaker SPEAKER_03:  이제 이거를 제가 이쪽에서 git push branch name 이렇게 하거나  아니면 여기에서 눌러 가지고 푸시를 시켜 주면  그럼 이제 여기 GitHub으로 넘어가면 되죠
Speaker SPEAKER_03: 
Speaker SPEAKER_01:  제가 보기 전에 궁금했던 건 아까 일괄 파일인데
Speaker SPEAKER_02: 
Speaker SPEAKER_01:  일괄이 놀라운 건 전체에서 통성인데  직전 변화에
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_01: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  그 모든 파일이 이 폴더 내에 있는 진짜 모든 파일
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  네 근데 이게 제가 다른 데서 찾아볼 때도 그렇고
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  이렇게 해서 하면 실수 생기기가 굉장히 좋긴 합니다  이렇게 해서 단점이
Speaker SPEAKER_01: 
Speaker SPEAKER_03:  단점이 그런 거죠  뭔가 내가 확실한 파일을 내리는 게 아닌가
Speaker SPEAKER_04: 
Speaker SPEAKER_01: 
Speaker SPEAKER_01: 
Speaker SPEAKER_03:  그렇기도 하고 트래킹이 되게 어려워 지요
Speaker SPEAKER_03:  무슨 얘기냐 하면
Speaker SPEAKER_03:  지금 제가 이 파일을 넣어서 지금 제가 이 파일을 넣어서 지금 제가  이거를 이제 하나 바꾸고 푸시하고 하나 바꾸고 푸시하고  보통 그렇게 안 하니까  이 파일도 바꾸고 저 파일도 바꾸고 여러 개를 바꿔놨잖아요  근데 메시지를 저기 지금 업데이트 snas라고 해놨는데
Speaker SPEAKER_03:  제가 만약에 여기서 그냥 이렇게 하면은
Speaker SPEAKER_03:  snas의 변화뿐만 아니라 다른 애들도 다 이 커밋 하나에 포함돼 버리니까  그다음에 제가 이걸 다 설명해 줄려면 엄청 길게 써야겠죠  그러면 여전히 또 트래킹이 어려워 지고  그래서 snas 얘는 snas로 업데이트 해가지고  snas를 업데이트 했고  그래서 이거 하나 해주고  그다음에 제가 트랜스크라이브 로직을 업데이트 했다고 하면  업데이트 트랜스크라이브 로직 이렇게 해서 이거 하나 또 하고  그다음에 오디오 인풋이 하나 추가 돼 가지고
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  아 얘는 또 용량이 크다고 안 되네
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  아 근데 이제 그 01SPEAKER_01님
Speaker SPEAKER_01: 
Speaker SPEAKER_03: 
Speaker SPEAKER_02: 
Speaker SPEAKER_01:  아  아  아  아  예 그렇죠
Speaker SPEAKER_01: 
Speaker SPEAKER_01: 
Speaker SPEAKER_01: 
Speaker SPEAKER_04: 
Speaker SPEAKER_01: 
Speaker SPEAKER_01: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  제가 설명을 드린 거는 01SPEAKER_01님 질문에 대한 답이기도 했지만
Speaker SPEAKER_03:  다 같이 한번 들어보면 좋을 것 같아서  01SPEAKER_01님은 아시는 내용일 수도 있는데  제가 좀 더 자세하게 얘기를 했던 거고요  이게 안 써보셨거나 쓴 지가 좀 돼 가지고
Speaker SPEAKER_02: 
Speaker SPEAKER_03:  내용이 정확히 기억이 안 난다고 하신 분이 있어요
Speaker SPEAKER_03:  그다음에 01SPEAKER_01님이 말씀하신 내용이  저도 처음에 짜증났던 부분이긴 하거든요
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  이게 처음에 저는 VS Code 이거 빛으로 쓴 게 아니라
Speaker SPEAKER_03:  사실 IntelliJ로 제일 먼저 써보고  그다음에 비슷한 파이썬으로 넘어오면서  근데 IntelliJ가 훨씬 좋긴 해요  역시 돈 내는 것들이 좋긴 해요
Speaker SPEAKER_03:  그리고 이제 파이참도 비슷한 형태니까  파이참도 좋았는데 이런 UI나 이런 게 좀 더 친절하고
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  이제 온갖 설명이나  레퍼런스 참고 삼기가 VS Code를 다 쓰고  그다음에 더군다나 여러 가지
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  그냥 단순히 주피톤을 통해 쓰는 것도 아니고  백엔드만 하는 것도 아니고 프론트엔드는 아니고  여러 개 합쳐서 할 때는 VS Code가 좀 좋은 것 같다 해서 넘어왔는데
Speaker SPEAKER_03:  그다음에 특히 조금 뭔가 저는 이게 되게 위압적이라고 생각하거든요
Speaker SPEAKER_02: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  경고 메시지를 띄워 가지고
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  원래는 기본적으로 버전 관리잖아요
Speaker SPEAKER_03:  이거 스테이지 시키고 커밋하고 하는 것도
Speaker SPEAKER_02: 
Speaker SPEAKER_03:  이렇게 좀 너무 자잘하게는 아니지만  단위를 작게 하는 게 좋다고 알고 있긴 해요  근데 저도 그렇기도 하고  이게 할 때야 그냥 하는데  나중에 한 거 더듬어 보려고 하면 기억이 잘 안 나긴 하더라고요
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  저희가 연습을 해 보자고 했던 거 있잖아요  3차 프로젝트 그거 Git으로 만들어 보자고
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  얼마 안 됐는데 그 각 버전이 정확히 기억이 안 나고
Speaker SPEAKER_02: 
Speaker SPEAKER_03:  다른 분들 혹시 01SPEAKER_01님 말고  다른 분들도 이거 VS Code로 그거 Git 하셨나요?  뭐 그 폴리캡스?  네, 저도 코드가 있었고
Speaker SPEAKER_00:  그 마크가 있었고
Speaker SPEAKER_03:  그 선서님이랑 04SPEAKER_04님도 비슷하신 거죠?
Speaker SPEAKER_01: 
Speaker SPEAKER_01: 
Speaker SPEAKER_01:  혹시 이거 뭐 상대로 하시는 거예요?
Speaker SPEAKER_01: 
Speaker SPEAKER_03:  이거 익스텐션 아니지 않아요?  이거 기본으로 있지 않아요?  이거 기본으로 있을 거예요
Speaker SPEAKER_01: 
Speaker SPEAKER_02: 
Speaker SPEAKER_02:  이거 기본으로 있지 않아요?
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_01:  네, 이 MRI도 터미너도 있어서
Speaker SPEAKER_01:  좀 더 터미너도 하셨어요
Speaker SPEAKER_02: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  Git, Add, 점 뭐 이렇게 해가지고
Speaker SPEAKER_03:  아, 아!
Speaker SPEAKER_03:  이거네요, 01SPEAKER_01님 딱
Speaker SPEAKER_03: 
Speaker SPEAKER_01:  사실 파우더를 더 익숙하게 하는데
Speaker SPEAKER_01:  아, 맞아요
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  뭐 이렇게 해서 막 넣고 뭐 어쩌고  아, 근데 이거 좀 하다 보면 흠질 나더라고요  저는 처음에 몰라가지고 이렇게 했는데
Speaker SPEAKER_02: 
Speaker SPEAKER_03:  나중에 보니까 그때
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_02: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  안 쓰려고 할 필요 없다  그러면서 그때 제가 전에 한 번 얘기했던
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_02: 
Speaker SPEAKER_00: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  어? 그 저 뭐야 여기에다가 이게 막 다 나오잖아요
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  네가 직접 다 쳐야지
Speaker SPEAKER_03:  그래서 이제 그런 거 너무 신경 쓸 필요 없고  툴 있으면 최대한 쓰면 좋다고 하면서
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  더 좋은 것들이 있긴 해요  근데 걔네들은 프로그램을 왔다 갔다 걸어야 되기도 하고
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  근데 얘도 익스테이션이 있어가지고 좀 더 볼 수 있다고는 없는데
Speaker SPEAKER_03: 
Speaker SPEAKER_00: 
Speaker SPEAKER_02: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  좋아요, 아 이거 킷도
Speaker SPEAKER_03:  아 근데 대단하시네 이걸 터미널로  터미널로 다셨구나
Speaker SPEAKER_01:  아 근데 저희가 저번에 그  리더스 패드에서  치과파트 툴인 거를
Speaker SPEAKER_01: 
Speaker SPEAKER_01:  그 확장 프로그램이 엄청 깔아도는 거에요
Speaker SPEAKER_01: 
Speaker SPEAKER_01: 
Speaker SPEAKER_03:  아, 뒷 확장 프로그램이요?
Speaker SPEAKER_03:  아
Speaker SPEAKER_01: 
Speaker SPEAKER_03:  기본으로 이거
Speaker SPEAKER_02: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  이게 조금 이렇게 좀 더 뭔가 뭐라 해야 되나
Speaker SPEAKER_03:  네
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  기술은 어느 정도 이제 시작할 정도 되는 거 같으니까  저희가 뭐 다 배우고 시작해야 되는 건 아니니까요  내일까지는 그 주제 탐색을 일단은  제 1 우선순위로
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  그래서 만약에 내일까지 확정이 안 되면은
Speaker SPEAKER_03:  토요일까지 해보는 거고요
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  그 일주일 동안 좀 쉬기도 하지만 뭐
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  막 크게 미팅 같은 건 없어도
Speaker SPEAKER_03:  각자 진행해 볼 거를 정하면 좋을 것 같아요
Speaker SPEAKER_03: 
Speaker SPEAKER_02:  아, 그래도 저는 이런 거 너무 좋네요  이 GUI 투어 보자는 얘기도 세 번의 프로젝트에서 다 얘기했는데
Speaker SPEAKER_03:  아, 그래도 저는 이런 거 너무 좋네요  이 GUI 투어 보자는 얘기도 세 번의 프로젝트에서 다 얘기했는데
Speaker SPEAKER_03: 
Speaker SPEAKER_02: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_02: 
Speaker SPEAKER_03:  다른 분들도 얼추 비슷한 경험이 있으신 거는 같아요
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  뭐 혹시 더 뭐 얘기하실 분 계실까요?
Speaker SPEAKER_00:  아, 혹시 다른 얘긴데
Speaker SPEAKER_01:  오늘 홈페이지 지킬 템 써서 혹시 하실 건가요?
Speaker SPEAKER_01:  근데 또
Speaker SPEAKER_02: 
Speaker SPEAKER_01: 
Speaker SPEAKER_01: 이랑
Speaker SPEAKER_01: 
Speaker SPEAKER_01:  그래서
Speaker SPEAKER_00: 
Speaker SPEAKER_03:  zweite는  이거  아
Speaker SPEAKER_00: 
Speaker SPEAKER_00: 
Speaker SPEAKER_03:  혹시 원하시는 분 계시면
Speaker SPEAKER_03:  뭔가 지금 정리가 안 된 느낌이긴 한데
Speaker SPEAKER_02: 
Speaker SPEAKER_03: 
Speaker SPEAKER_02: 
Speaker SPEAKER_03: 
Speaker SPEAKER_01: 
Speaker SPEAKER_01:  그래서  이게 다 기억한다기 보다는
Speaker SPEAKER_03:  그래서
Speaker SPEAKER_01: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  이게 맥락이 생기잖아요 진행하다 보면
Speaker SPEAKER_01: 
Speaker SPEAKER_02: 
Speaker SPEAKER_03:  그래서 똑같은 프롬프트를 넣어도 답변이 달라지는데
Speaker SPEAKER_03:  여기 저장되긴 하지만 이거 찾아가는 게 거의 힘들어서
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_02: 
Speaker SPEAKER_03:  오늘 하자는 얘기는 아니고  혹시 원하시는 분 있으면  제가 gpt를 계속 쓰면서
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  아 어디서
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  그런 거 할 얘기가 조금  원하시는 분 있으면 있긴 하거든요
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  그냥 아예 새 창 키는 게 아니라 이렇게 해갖고
Speaker SPEAKER_03:  이제 얘를 최신으로 쓸 거고  얘가 지금 만들려는 어떤 건지 정확히 모르겠는데  gpt 쓰잖아요
Speaker SPEAKER_03:  사실 이렇게 만드는 건 거의 제대로 된 게 안 나오는 것 같고  여기에 내용을 넣어줘야 뭐가 나오는 것 같은데
Speaker SPEAKER_03:  저 04SPEAKER_04 님도 이제 요거는 그냥  유일 많이 쓰셨다고 하니까
Speaker SPEAKER_03:  안 쓰신 분들이랑 저희 시간 되는 프로젝트  약간 팁 공유 같은 느낌으로
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  얘기해 보는 시간에 한번 있어도 좋을 것 같아요
Speaker SPEAKER_03:  그래서 뭐 gpt 쓰 뭐 어떻게 무슨 프롬프트 넣으면은  어떻게 결과 나오는지 궁금하다 하시는 분 있으면은  저나 04SPEAKER_04 님한테 요청하셔서 진행해 볼 수 있어요
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  혹시 뭐 저랑 04SPEAKER_04 님 말고 또 이거 유료로 쓰시는 분 계신가요?
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  gpt보다 써봤거든요
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  벤치마크
Speaker SPEAKER_03:  벤치마크를 정확히 어떻게 돌리는지 모르겠는데  실사용하면서 특히 이제 코드 관련돼서 사용할 때 느끼는 거는
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  저는 gpt의 단점이 gpt 수를 쓰든 커스텀을 쓰든 아니든
Speaker SPEAKER_03:  내가 뭘 검색을 했는데
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  개소리하기 시작하더라고요
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  이제 다시 정상으로 돌아오고 해서
Speaker SPEAKER_03:  다 찾아다니기가 힘들잖아요
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  이게 모르는 내용이 워낙 많다 보니까  뭐 라이트 gbm이 뭔지 gpt한테 물어본 거를 이제
Speaker SPEAKER_02:  이게 모르는 내용이 워낙 많다 보니까
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  이제 이런 찾았던 내용들이 나오는 건데
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  실행 순서 같은 거가 어떻게 되는지를  이것도 gpt한테 보통 물어봐서 알아봤는데  각각이 뭔지도
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  gpt5가 좀 빨라졌다고 해도  자꾸자꾸 찾아보려고 하면은
Speaker SPEAKER_03: 
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  저는 사실 다른 분들이 어떻게 쓰고 계신지도 좀 궁금하기도 하고  다 쓰고 계신다고 하고  진영 님은 이후로도 오래 쓰고 계신다고 해서  그래서 꼭 이번 주가 아니더라도 중간에
Speaker SPEAKER_04: 
Speaker SPEAKER_03:  어떻게 쓰시는지 공유하는 시간이 있어도 좋겠습니다
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  이거 시간 내서 좀 해볼까요?
Speaker SPEAKER_03:  lmm 어떻게 쓰는지 봤어요
Speaker SPEAKER_03: 
Speaker SPEAKER_00: 
Speaker SPEAKER_03:  아 이렇게...
Speaker SPEAKER_03:  언제 끝나는지
Speaker SPEAKER_03: 
Speaker SPEAKER_02: 
Speaker SPEAKER_03:  알겠습니다
Speaker SPEAKER_03: 
Speaker SPEAKER_03:  안녕히 계세요
Speaker SPEAKER_01: 
Speaker SPEAKER_02: 
